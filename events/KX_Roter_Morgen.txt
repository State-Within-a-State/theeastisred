add_namespace = rotermorgen


country_event = { # GRU setup
	id = rotermorgen.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgen.1" }
	title = rotermorgen.1.t
	desc = rotermorgen.1.d
	
	fire_only_once = yes
	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			GRU = {
				set_cosmetic_tag = GRU_OCCUPIED
				set_country_flag = GRU_LEFTYMOD
				set_country_flag = GRU_OCCU_START
				set_country_flag = GRU_OCCUPIED_START
				remove_all_ministers = yes
				add_ideas = {
					GRU_FRAUOBSRI_syn
					GRU_FRA_syn
					GRU_UOB_syn
					GRU_SRI_syn
				}
				create_country_leader = {
							name = "Internationale Administration of Germany"
							desc = "GRU_OCCUPIED_GOV_DESC"
							picture = "gfx/leaders/GRU/germans_no_freedom.png"
							expire = "1965.1.1"
							ideology = syndicalist_subtype
				}
				create_country_leader = {
							name = "Internationale Administration of Germany"
							desc = "GRU_OCCUPIED_GOV_DESC"
							picture = "gfx/leaders/GRU/germans_no_freedom.png"
							expire = "1965.1.1"
							ideology = radical_socialist_subtype
				}
				create_country_leader = {
							name = "Internationale Administration of Germany"
							desc = "GRU_OCCUPIED_GOV_DESC"
							picture = "gfx/leaders/GRU/germans_no_freedom.png"
							expire = "1965.1.1"
							ideology = totalist_subtype
				}
				
				create_country_leader = {
							name = "Konrad Adenauer"
							desc = "GRU_Adenauer_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Konrad_Adenauer.png"
							expire = "1965.1.1"
							ideology = social_conservative_subtype
				}
				create_country_leader = {
							name = "Franz Bl√ºcher"
							desc = "GRU_bluecher_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Franz_Bluecher.png"
							expire = "1965.1.1"
							ideology = social_liberal_subtype
				}
				
				
				
				set_politics = {
					ruling_party = syndicalist
					last_election = "1936.11.16"
					elections_allowed = no
				}
				set_popularities = {
				totalist = 20
				syndicalist = 30
				radical_socialist = 20
				social_democrat = 10
				social_liberal = 6
				market_liberal = 3
				social_conservative = 6
				authoritarian_democrat = 5
				}
				load_focus_tree = {
				tree = gru-totalist
					
				}
				set_party_name = {
						ideology = totalist
						long_name = GRU_occu_long
						name = GRU_occu_long
				}
				set_party_name = {
						ideology = syndicalist
						long_name = GRU_occu_long
						name = GRU_occu_long
				}
				set_party_name = {
						ideology = radical_socialist
						long_name = GRU_occu_long
						name = GRU_occu_long
				}
				
				
				set_party_name = {
						ideology = social_liberal
						long_name = GRU_SOCLIB_PARTY_long
						name = GRU_SOCLIB_PARTY
				}
				set_party_name = {
						ideology = market_liberal
						long_name = GRU_MARLIB_PARTY_long
						name = GRU_MARLIB_PARTY
				}
				set_party_name = {
						ideology = social_conservative
						long_name = GRU_CONS_PARTY_long
						name = GRU_CONS_PARTY
				}
			}
		}	
	}

	option = { # stay what you are
		name = rotermorgen.1.a
	}
	
	option = { # Play as GRU
		name = rotermorgen.1.b
		trigger = {
			is_ai = no
		}
		GRU = {
			change_tag_from = ROOT
		}
	}
}

country_event = { # Occupation Intro
	id = rotermorgen.10
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgen.10" }
	title = rotermorgen.10.t
	desc = rotermorgen.10.d

	is_triggered_only = yes
	
	option = { # SPD-r forms
		name = rotermorgen.10.a
		hidden_effect = {
				country_event = {
				id = rotermorgen.20
				days = 14
				}
		}
	}
}

country_event = { # SPD radikalize Forms
	id = rotermorgen.20
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgen.20" }
	title = rotermorgen.20.t
	desc = rotermorgen.20.d

	is_triggered_only = yes
	
	option = { # SPD-r forms
		name = rotermorgen.20.a
		hidden_effect = {
				country_event = {
				id = rotermorgen.30
				days = 16
				}
		}
	}
}
country_event = { # FAUD-Reaorganises
	id = rotermorgen.30
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgen.30" }
	title = rotermorgen.30.t
	desc = rotermorgen.30.d

	is_triggered_only = yes
	
	option = { # FAUD
		name = rotermorgen.30.a
		hidden_effect = {
				country_event = {
				id = rotermorgen.40
				days = 17
				}
		}
	}
}
country_event = { # SMEPD forms
	id = rotermorgen.40
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgen.40" }
	title = rotermorgen.40.t
	desc = rotermorgen.40.d

	is_triggered_only = yes
	
	option = { # SMEPD forms
		name = rotermorgen.40.a
		hidden_effect = {
				country_event = {
				id = rotermorgen.50
				days = 13
				}
		}
	}
}

country_event = { # NMDVP Forms
	id = rotermorgen.50
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgen.50" }
	title = rotermorgen.50.t
	desc = rotermorgen.50.d

	is_triggered_only = yes
	
	option = { # NMDVP forms
		name = rotermorgen.50.a
		hidden_effect = {
				country_event = {
				id = rotermorgen.51
				days = 12
				}
		}
	}
}
country_event = { # NMDVP Forms
	id = rotermorgen.51
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgen.51" }
	title = rotermorgen.51.t
	desc = rotermorgen.51.d

	is_triggered_only = yes
	
	option = { # NMDVP forms
		name = rotermorgen.51.a
		hidden_effect = {
				country_event = {
				id = rotermorgen.52
				days = 5
				}
		}
	}
}
country_event = { # NMDVP Forms
	id = rotermorgen.52
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgen.52" }
	title = rotermorgen.52.t
	desc = rotermorgen.52.d

	is_triggered_only = yes
	
	option = { # NMDVP forms
		name = rotermorgen.52.a
		hidden_effect = {
				country_event = {
				id = rotermorgen.60
				days = 20
				}
				country_event = {
				id = rotermorgen.61
				days = 2
				}
		}
	}
	option = { # NMDVP forms
		name = rotermorgen.52.b
		hidden_effect = {
				country_event = {
				id = rotermorgen.60
				days = 20
				}
		}
	}
}

country_event = { # congress_allowed
	id = rotermorgen.60
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgen.60" }
	title = rotermorgen.60.t
	desc = rotermorgen.60.d

	is_triggered_only = yes
	
	option = { # Occupation calls for election
		name = rotermorgen.60.a
		hidden_effect = {
			set_country_flag = PARTIES_FORMED
		}
	}
}
country_event = { 
	id = rotermorgen.61
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgen.61" }
	title = rotermorgen.61.t
	desc = rotermorgen.61.d

	is_triggered_only = yes
	
	option = { 
		name = rotermorgen.61.a
	}
}

country_event = { # CONGRESS
	id = rotermorgen.70
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgen.70" }
	title = rotermorgen.70.t
	desc = rotermorgen.70.d
	picture = GFX_report_event_Congress_pic
	is_triggered_only = yes
	
	option = { # NMDVP Victory
		name = rotermorgen.70.a
		ai_chance = {
			factor = 0
		}
		hidden_effect = {
				kill_ideology_leader = totalist
				kill_ideology_leader = syndicalist
				kill_ideology_leader = radical_socialist
				set_country_flag = GRU_NMDVP_rule
				complete_national_focus = GRU_nmdvp_victory
				set_cosmetic_tag = GRU_NMDVP
				##parties##
				#obsolte tree for now
				#load_focus_tree = {
				#tree = gru_goebbels
				#	
				#}
				set_party_name = {
						ideology = totalist
						long_name = GRU_NMDVP_long
						name = GRU_NMDVP
				}
				create_country_leader = {
							name = "Josef Goebbels"
							desc = "GRU_GOEBBELS_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Josef_Goebbels_13.png"
							expire = "1965.1.1"
							ideology = national_marxist_subtype
							traits = {
								gru_froncophobe
							}
				}
				#
				set_party_name = {
						ideology = syndicalist
						long_name = GRU_SEPD_long
						name = GRU_SEPD
				}
				create_country_leader = {
							name = "Wilhelm Pieck"
							desc = "GRU_PIECK_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Wilhelm_Pieck_I.png"
							expire = "1965.1.1"
							ideology = syndicalist_subtype
				}
				#
				set_party_name = {
						ideology = social_democrat
						long_name = GRU_SPD_long
						name = GRU_SPD
				}
				create_country_leader = {
							name = "Karl Liebknecht"
							desc = "GRU_LIEBKNECHT_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Karl_Liebknecht.png"
							expire = "1965.1.1"
							ideology = socdem_democratic_socialism_subtype
				}
				#
				set_party_name = {
						ideology = radical_socialist
						long_name = GRU_FAUD_long
						name = GRU_FAUD
				}
				create_country_leader = {
							name = "Rudolf Rocker"
							desc = "GRU_ROCKER_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Rudolf_Rocker_I.png"
							expire = "1965.1.1"
							ideology = anarchism_subtype
				}
				########
				
				remove_all_ministers = yes
				add_ideas = {
					GRU_Joseph_Goebbels_hog_tot
					GRU_Bodo_Uhse_for_tot
					GRU_Gregor_Strasser_eco_tot
					GRU_MEMEMAN_sec_tot
				}
				set_politics = {
					ruling_party = totalist
					last_election = "1936.11.16"
					elections_allowed = no
				}
				add_popularity = {
					ideology = totalist
					popularity = 0.40
				}
		}
	}
	option = { # SMEPD Victory
		name = rotermorgen.70.b
		ai_chance = {
			factor = 80
		}
		hidden_effect = {
				kill_ideology_leader = totalist
				kill_ideology_leader = syndicalist
				kill_ideology_leader = radical_socialist
				set_country_flag = GRU_SMEPD_rule
				complete_national_focus = GRU_sepd_victory
				set_cosmetic_tag = GRU_SEPD_A
				##parties##
				#obsolte tree for now
				#load_focus_tree = {
				#tree = gru_smepd
				#	
				#}
				set_party_name = {
						ideology = totalist
						long_name = GRU_NMDVP_long
						name = GRU_NMDVP
				}
				create_country_leader = {
							name = "Josef Goebbels"
							desc = "GRU_GOEBBELS_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Josef_Goebbels_13.png"
							expire = "1965.1.1"
							ideology = national_marxist_subtype
				}
				#
				set_party_name = {
						ideology = syndicalist
						long_name = GRU_SEPD_long
						name = GRU_SEPD
				}
				create_country_leader = {
							name = "Wilhelm Pieck"
							desc = "GRU_PIECK_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Wilhelm_Pieck_I.png"
							expire = "1965.1.1"
							ideology = syndicalist_subtype
				}
				#
				set_party_name = {
						ideology = social_democrat
						long_name = GRU_SPD_long
						name = GRU_SPD
				}
				create_country_leader = {
							name = "Karl Liebknecht"
							desc = "GRU_LIEBKNECHT_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Karl_Liebknecht.png"
							expire = "1965.1.1"
							ideology = socdem_democratic_socialism_subtype
				}
				#
				set_party_name = {
						ideology = radical_socialist
						long_name = GRU_FAUD_long
						name = GRU_FAUD
				}
				create_country_leader = {
							name = "Rudolf Rocker"
							desc = "GRU_ROCKER_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Rudolf_Rocker_I.png"
							expire = "1965.1.1"
							ideology = anarchism_subtype
				}
				########
				remove_all_ministers = yes
				add_ideas = {
					GRU_Ernst_Thaelmann_hog_syn
					GRU_Walter_Ulbricht_for_tot
					GRU_Jakob_Kaiser_eco_syn
					GRU_Willi_Muenzenberg_sec_tot
				}
				set_politics = {
					ruling_party = syndicalist
					last_election = "1936.11.16"
					elections_allowed = no
				}
				add_popularity = {
					ideology = syndicalist
					popularity = 0.60
				}
		}
	}
	option = { # FAUD Victory
		name = rotermorgen.70.c
		ai_chance = {
			factor = 10
		}
		hidden_effect = {
				kill_ideology_leader = totalist
				kill_ideology_leader = syndicalist
				kill_ideology_leader = radical_socialist
				set_country_flag = GRU_FAUD_rule
				complete_national_focus = GRU_faud_victory
				set_cosmetic_tag = GRU_FAUD
				remove_all_ministers = yes
				#obsolte tree for now
				#load_focus_tree = {
				#tree = gru_FAUD
				#	
				#}
				add_ideas = {
					GRU_Helmut_Herzfeld_hog_syn
					GRU_Paul_Levi_for_syn
					GRU_Rudolf_Egelhofer_eco_syn
					GRU_Eugen_Levine_sec_syn
				}
				set_politics = {
					ruling_party = syndicalist
					last_election = "1936.11.16"
					elections_allowed = no
				}
				add_popularity = {
					ideology = syndicalist
					popularity = 0.60
				}
				kill_ideology_leader = social_democrat
				kill_ideology_leader = radical_socialist
				set_party_name = {
						ideology = totalist
						long_name = GRU_SEPD_long
						name = GRU_SEPD
				}
				create_country_leader = {
							name = "Wilhelm Pieck"
							desc = "GRU_PIECK_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Wilhelm_Pieck_I.png"
							expire = "1965.1.1"
							ideology = authcom_subtype
				}
				set_party_name = {
						ideology = social_democrat
						long_name = GRU_SPD_long
						name = GRU_SPD
				}
				set_party_name = {
						ideology = radical_socialist
						long_name = GRU_SPDR_long
						name = GRU_SPDR
				}
				create_country_leader = {
							name = "Karl Liebknecht"
							desc = "GRU_LIEBKNECHT_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Karl_Liebknecht.png"
							expire = "1965.1.1"
							ideology = moderate_socialist_subtype
				}
				set_party_name = {
						ideology = syndicalist
						long_name = GRU_FAUD_long
						name = GRU_FAUD
				}
				create_country_leader = {
							name = "Rudolf Rocker"
							desc = "GRU_ROCKER_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Rudolf_Rocker_I.png"
							expire = "1965.1.1"
							ideology = anarcho_syndicalist_subtype
				}
		}
	}
	option = { # SPD Victory
		name = rotermorgen.70.e
		ai_chance = {
			factor = 10
		}
		hidden_effect = {
				kill_ideology_leader = totalist
				kill_ideology_leader = syndicalist
				kill_ideology_leader = radical_socialist
				set_country_flag = GRU_SPD_rule
				complete_national_focus = GRU_spd_victory
				set_cosmetic_tag = GRU_REP
				#obsolte tree for now
				#load_focus_tree = {
				#tree = gru_SPD
				#	
				#}
				remove_all_ministers = yes
				add_ideas = {
					GRU_Heinrich_Brandler_hog_rso
					GRU_Erich_Ollenhauer_for_rso
					GRU_Hans_Reichenbach_eco_rso
					GRU_Franz_Oppenhoff_sec_rso
				}
				set_politics = {
					ruling_party = radical_socialist
					last_election = "1936.11.16"
					elections_allowed = no
				}
				add_popularity = {
					ideology = radical_socialist
					popularity = 0.60
				}
				kill_ideology_leader = social_democrat
				kill_ideology_leader = radical_socialist
				##parties##
				set_party_name = {
						ideology = totalist
						long_name = GRU_NMDVP_long
						name = GRU_NMDVP
				}
				create_country_leader = {
							name = "Josef Goebbels"
							desc = "GRU_GOEBBELS_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Josef_Goebbels_13.png"
							expire = "1965.1.1"
							ideology = national_marxist_subtype
				}
				#
				set_party_name = {
						ideology = syndicalist
						long_name = GRU_SEPD_long
						name = GRU_SEPD
				}
				create_country_leader = {
							name = "Wilhelm Pieck"
							desc = "GRU_PIECK_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Wilhelm_Pieck_I.png"
							expire = "1965.1.1"
							ideology = authcom_subtype
				}
				#
				set_party_name = {
						ideology = radical_socialist
						long_name = GRU_SPDR_long
						name = GRU_SPDR
				}
				create_country_leader = {
							name = "Karl Liebknecht"
							desc = "GRU_LIEBKNECHT_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Karl_Liebknecht.png"
							expire = "1965.1.1"
							ideology = moderate_socialist_subtype
				}
				set_party_name = {
						ideology = social_democrat
						long_name = GRU_SPD_long
						name = GRU_SPD
				}
		}
	}
}
country_event = { # SMEPD SPLIT
	id = rotermorgen.80
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgen.80" }
	title = rotermorgen.80.t
	desc = rotermorgen.80.d

	is_triggered_only = yes
	
	option = { # Thaly kick Pieck
		name = rotermorgen.80.a
		ai_chance = {
			factor = 50
		}
		hidden_effect = {
				set_country_flag = GRU_SMEPD_S_rule
				kill_ideology_leader = totalist
				kill_ideology_leader = syndicalist
				kill_ideology_leader = totalist
				kill_ideology_leader = syndicalist
				set_party_name = {
						ideology = syndicalist
						long_name = GRU_SEPD_THALY_long
						name = GRU_SEPD_THALY
				}
				create_country_leader = {
							name = "Ernst Th√§lmann"
							desc = "GRU_THALY_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Ernst_Thalmann.png"
							expire = "1965.1.1"
							ideology = syndicalist_subtype
				}
				set_party_name = {
						ideology = totalist
						long_name = GRU_SEPD_PIECK_long
						name = GRU_SEPD_PIECK
				}
				create_country_leader = {
							name = "Wilhelm Pieck"
							desc = "GRU_PIECK_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Wilhelm_Pieck_I.png"
							expire = "1965.1.1"
							ideology = authcom_subtype
				}
				complete_national_focus = GRU_thalmann
				remove_all_ministers = yes
				add_ideas = {
					GRU_Ernst_Thaelmann_hog_syn
					GRU_Gerhart_Eisler_for_syn
					GRU_Jakob_Kaiser_eco_syn
					GRU_Ludwig_Renn_sec_syn
				}
		}
	}
	option = { # Pieck kick Thaly
		name = rotermorgen.80.b
		ai_chance = {
			factor = 50
		}
		hidden_effect = {
				set_country_flag = GRU_SMEPD_M_rule
				kill_ideology_leader = totalist
				kill_ideology_leader = syndicalist
				kill_ideology_leader = totalist
				kill_ideology_leader = syndicalist
				set_party_name = {
						ideology = syndicalist
						long_name = GRU_SEPD_THALY_long
						name = GRU_SEPD_THALY
				}
				create_country_leader = {
							name = "Ernst Th√§lmann"
							desc = "GRU_THALY_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Ernst_Thalmann.png"
							expire = "1965.1.1"
							ideology = syndicalist_subtype
				}
				set_party_name = {
						ideology = totalist
						long_name = GRU_SEPD_PIECK_long
						name = GRU_SEPD_PIECK
				}
				create_country_leader = {
							name = "Wilhelm Pieck"
							desc = "GRU_PIECK_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Wilhelm_Pieck_I.png"
							expire = "1965.1.1"
							ideology = authcom_subtype
				}
				complete_national_focus = GRU_pieck
				remove_all_ministers = yes
				add_ideas = {
					GRU_Wilhelm_Pieck_hog_tot
					GRU_Walter_Ulbricht_for_tot
					GRU_Willi_Muenzenberg_eco_tot
					GRU_Willi_Muenzenberg_sec_tot
				}
				set_politics = {
					ruling_party = totalist
					last_election = "1936.11.16"
					elections_allowed = no
				}
				add_popularity = {
					ideology = totalist
					popularity = 0.60
				}
				
		}
	}
}

country_event = { 
	id = rotermorgen.700
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgen.700" }
	title = rotermorgen.700.t
	desc = rotermorgen.700.d

	is_triggered_only = yes
	
	option = { # CDU VIC
		name = rotermorgen.700.a
		ai_chance = {
			factor = 20
		}
		hidden_effect = {
				set_country_flag = GRU_CDU_rule
				complete_national_focus = GRU_CONSERVATIVES_ELECTED
				remove_all_ministers = yes
				add_ideas = {
					GER_Heinrich_Bruening_hog_sco
					GRU_Karl_Arnold_for_sco
					GRU_Fritz_Schaeffer_eco_sco
					GRU_Konrad_Adenauer_sec_sco
				}
				set_politics = {
					ruling_party = social_conservative
					last_election = "1936.11.16"
					elections_allowed = no
				}
		}
	}
	
	option = { # DLP VIC
		name = rotermorgen.700.b
		ai_chance = {
			factor = 20
		}
		hidden_effect = {
				set_country_flag = GRU_DLP_rule
				complete_national_focus = GRU_MARKET_LIBERALS_ELECTED
				remove_all_ministers = yes
				add_ideas = {
					GER_Erich_Koch_hog_sli
					GRU_Thomas_Dehler_for_mli
					GRU_Walther_von_Rathenau_eco_mli
					GRU_Wilhelm_Marx_sec_mli
				}
				set_politics = {
					ruling_party = market_liberal
					last_election = "1936.11.16"
					elections_allowed = no
				}
		}
	}
	
	option = { # FDP VIC
		name = rotermorgen.700.c
		ai_chance = {
			factor = 20
		}
		hidden_effect = {
				set_country_flag = GRU_FDP_rule
				complete_national_focus = GRU_SOCIAL_LIBERALS_ELECTED
				remove_all_ministers = yes
				add_ideas = {
					GRU_Alex_Moeller_hog_sli
					GRU_Albert_Dufour_Feronce_for_sli
					GRU_Heinrich_Wilhelm_Kopf_eco_sli
					GRU_Reinhold_Maier_sec_sli
				}
				set_politics = {
					ruling_party = social_liberal
					last_election = "1936.11.16"
					elections_allowed = no
				}
		}
	}
	
	option = { # SDP VIC
		name = rotermorgen.700.e
		ai_chance = {
			factor = 20
		}
		hidden_effect = {
				set_country_flag = GRU_SPD_rule
				complete_national_focus = GRU_SOCIAL_DEMS_ELECTED
				remove_all_ministers = yes
				add_ideas = {
					GRU_Hans_Vogel_hog_sde
					GRU_Erich_Ollenhauer_for_sde
					GRU_Gustav_Bauer_eco_sde
					GRU_Georg_August_Zinn_sec_sde
				}
				set_politics = {
					ruling_party = social_democrat
					last_election = "1936.11.16"
					elections_allowed = no
				}
		}
	}
	
	option = { # PDS VIC
		name = rotermorgen.700.f
		ai_chance = {
			factor = 20
		}
		hidden_effect = {
				set_country_flag = GRU_PDS_rule
				complete_national_focus = GRU_RADSOCS_ELECTED
				remove_all_ministers = yes
				add_ideas = {
					GRU_Erich_Honecker_hog_rso
					GRU_Heinrich_Mann_for_rso
					GRU_Augustin_Souchy_eco_rso
					GRU_Fritz_Kater_sec_rso
				}
				set_politics = {
					ruling_party = radical_socialist
					last_election = "1936.11.16"
					elections_allowed = no
				}
		}
	}
	
	
}

add_namespace = rotermorgenspicy

country_event = { #
	id = rotermorgenspicy.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenspicy.1" }
	title = rotermorgenspicy.1.t
	desc = rotermorgenspicy.1.d
	picture = GFX_report_event_synthwave
	is_triggered_only = yes
	
	hidden = yes
	immediate = {
create_field_marshal = {
			name = "Josef Goebbels"
			picture = "gfx/leaders/GRU/Portrait_Germany_Josef_Goebbels_14.png"
			traits = { politically_connected RR_OFFICER }
			skill = 4
			attack_skill = 3
			defense_skill = 5
			planning_skill = 2
			logistics_skill = 3
		}
create_corps_commander = {
	name = "Alfred Bernhard W√ºnnenberg"
	picture = "gfx/leaders/GRU/Portrait_Germany_Alfred_Bernhard_Wernnenberg.png"
	traits = { panzer_leader RR_OFFICER }
	skill = 4

	attack_skill = 4
	defense_skill = 2
	planning_skill = 3
	logistics_skill = 2
}
create_corps_commander = {
	name = "Georg Keppler"
	picture = "gfx/leaders/GRU/Portrait_Germany_Georg_Keppler.png"
	traits = { panzer_leader RR_OFFICER }
	skill = 4

	attack_skill = 3
	defense_skill = 3
	planning_skill = 4
	logistics_skill = 2
}
create_corps_commander = {
	name = "Heinz Harmel"
	picture = "gfx/leaders/GRU/Portrait_Germany_Heinz_Harmel.png"
	traits = { winter_specialist panzer_leader ranger RR_OFFICER }
	skill = 3
	id = 107
	attack_skill = 1
	defense_skill = 2
	planning_skill = 3
	logistics_skill = 3
}
create_corps_commander = {
	name = "Herbert-Ernst Vahl"
	picture = "gfx/leaders/GRU/Portrait_Germany_Herbert-Ernst_Vahl.png"
	traits = { panzer_leader trait_reckless RR_OFFICER }
	skill = 4

	attack_skill = 4
	defense_skill = 3
	planning_skill = 1
	logistics_skill = 2
}
create_corps_commander = {
	name = "Karl Friedrich Wolff"
	picture = "gfx/leaders/GRU/Portrait_Germany_Karl_Friedrich_Otto_Wolff.png"
	traits = { war_hero urban_assault_specialist RR_OFFICER }
	skill = 3

	attack_skill = 1
	defense_skill = 2
	planning_skill = 3
	logistics_skill = 3
}
create_corps_commander = {
	name = "Joachim Peiper"
	picture = "gfx/leaders/GRU/Portrait_Germany_Joachim_peiper.png"
	traits = { panzer_leader commando ranger RR_OFFICER }
	skill = 3

	attack_skill = 4
	defense_skill = 2
	planning_skill = 2
	logistics_skill = 2
}
create_corps_commander = {
	name = "Karl Kreutz"
	picture = "gfx/leaders/GRU/Portrait_Germany_Karl_Kreutz.png"
	traits = { panzer_leader RR_OFFICER }
	skill = 2

	attack_skill = 2
	defense_skill = 2
	planning_skill = 1
	logistics_skill = 1
}
create_field_marshal = {
	name = "Sepp Dietrich"
	picture = "gfx/leaders/GRU/Portrait_Germany_Sepp_Dietrich.png"
	traits = { trickster panzer_leader war_hero RR_OFFICER }
	skill = 4

	attack_skill = 4
	defense_skill = 3
	planning_skill = 4
	logistics_skill = 3
}
create_field_marshal = {
	name = "Paul Hausser"
	picture = "gfx/leaders/GRU/Portrait_Germany_Paul_Hausser.png"
	traits = { trickster panzer_leader ranger war_hero RR_OFFICER }
	skill = 4

	attack_skill = 4
	defense_skill = 3
	planning_skill = 4
	logistics_skill = 3
}
create_corps_commander = {
	name = "Otto Kumm"
	picture = "gfx/leaders/GRU/Portrait_Germany_Otto_Kumm.png"
	traits = { panzer_leader ranger RR_OFFICER }
	skill = 3

	attack_skill = 2
	defense_skill = 3
	planning_skill = 2
	logistics_skill = 2
}
create_corps_commander = {
	name = "Werner Ostendorff"
	picture = "gfx/leaders/GRU/Portrait_Germany_Werner_Ostendorff.png"
	traits = { panzer_leader trait_reckless RR_OFFICER }
	skill = 3

	attack_skill = 2
	defense_skill = 2
	planning_skill = 3
	logistics_skill = 2
}
create_corps_commander = {
	name = "Wilhelm Bittrich"
	picture = "gfx/leaders/GRU/Portrait_Germany_Wilhelm_Bittrich.png"
	traits = { panzer_leader cavalry_officer war_hero RR_OFFICER }
	skill = 4

	attack_skill = 2
	defense_skill = 4
	planning_skill = 2
	logistics_skill = 2
}
				create_field_marshal = {
					name = "Ernst R√∂hm"
					picture = "gfx/leaders/GRU/Portrait_Germany_Ernst_Rhoem.png"
					traits = { politically_connected trait_reckless war_hero volkssturm_leader }
					skill = 3

					attack_skill = 2
					defense_skill = 2
					planning_skill = 4
					logistics_skill = 2
				}
create_corps_commander = {
					name = "Karl Ernst"
					picture = "gfx/leaders/GRU/Portrait_Germany_Karl_Ernst.png"
					traits = { politically_connected war_hero volkssturm_leader }
					skill = 3

					attack_skill = 2
					defense_skill = 2
					planning_skill = 4
					logistics_skill = 2
				}
create_corps_commander = {
					name = "Horst Wessel"
					picture = "gfx/leaders/GRU/Portrait_Germany_Horst_Wessel.png"
					traits = { politically_connected war_hero volkssturm_leader }
					skill = 3

					attack_skill = 4
					defense_skill = 2
					planning_skill = 4
					logistics_skill = 2
				}
				every_army_leader = {
					limit = {
						has_trait = RR_OFFICER
					}
					set_unit_leader_flag = RR_OFFICER
				}
				every_army_leader = {
					limit = {
						has_trait = volkssturm_leader
					}
					set_unit_leader_flag = VS_OFFICER
				}
	}
}

add_namespace = rotermorgenrussiandoom

country_event = { #
	id = rotermorgenrussiandoom.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenrussiandoom.1" }
	title = rotermorgenrussiandoom.1.t
	desc = rotermorgenrussiandoom.1.d
	fire_only_once = yes
	trigger = {
		tag = RUS
		has_war_with = GRU
		surrender_progress > 0.50
		GRU = { has_country_leader = { ruling_only = yes name = "Josef Goebbels" } }
		OR = {
			GRU = {
				controls_state = 195
			}
			any_other_country = {
				is_subject_of = GRU
				controls_state = 195
			}
		}
		OR = {
			GRU = {
				controls_state = 205
			}
			any_other_country = {
				is_subject_of = GRU
				controls_state = 205
			}
		}
		OR = {
			GRU = {
				controls_state = 263
			}
			any_other_country = {
				is_subject_of = GRU
				controls_state = 263
			}
		}
		OR = {
			GRU = {
				controls_state = 217
			}
			any_other_country = {
				is_subject_of = GRU
				controls_state = 217
			}
		}
	}
	hidden = yes
	immediate = {
		###Muscovy
		if = {
			limit = {
				219 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 219
			}
			219 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				247 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 247
			}
			247 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				248 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 248
			}
			248 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				252 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 252
			}
			252 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				253 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 253
			}
			253 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				254 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 254
			}
			254 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				264 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 264
			}
			264 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				351 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 351
			}
			351 = { 
				add_core_of = RRY
			}
		}
		###Kazan
		
		if = {
			limit = {
				1199 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 1199
			}
			1199 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				1193 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 1193
			}
			1193 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				1204 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 1204
			}
			1204 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				1203 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 1203
			}
			1203 = { 
				add_core_of = RRE
			}
		}
		
		if = {
			limit = {
				1198 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 1198
			}
			1198 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				1197 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 1197
			}
			1197 = { 
				add_core_of = RRE
			}
		}
		
		if = {
			limit = {
				1205 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 1205
			}
			1205 = { 
				add_core_of = RRE
			}
		}
		
		if = {
			limit = {
				249 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 249
			}
			249 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				256 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 256
			}
			256 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				251 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 251
			}
			251 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				250 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 250
			}
			250 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				399 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 399
			}
			399 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				400 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 400
			}
			400 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				255 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 255
			}
			255 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				257 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 257
			}
			257 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				239 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 239
			}
			239 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				401 = { is_owned_by = RUS }
			}
			RRE = {
				transfer_state = 401
			}
			401 = { 
				add_core_of = RRE
			}
		}
		##Komi-Nenet
		if = {
			limit = {
				397 = { is_owned_by = RUS }
			}
			RRZ = {
				transfer_state = 397
			}
			397 = { 
				add_core_of = RRZ
			}
		}
		if = {
			limit = {
				214 = { is_owned_by = RUS }
			}
			RRZ = {
				transfer_state = 214
			}
			214 = { 
				add_core_of = RRZ
			}
		}
		if = {
			limit = {
				262 = { is_owned_by = RUS }
			}
			RRZ = {
				transfer_state = 262
			}
			262 = { 
				add_core_of = RRZ
			}
		}
		if = {
			limit = {
				581 = { is_owned_by = RUS }
			}
			RRU = {
				transfer_state = 581
			}
			581 = { 
				add_core_of = RRU
			}
		}
		
		
		if = {
			limit = {
				1196 = { is_owned_by = RUS }
			}
			RRU = {
				transfer_state = 1196
			}
			1196 = { 
				add_core_of = RRU
			}
		}
		
		if = {
			limit = {
				1195 = { is_owned_by = RUS }
			}
			RRU = {
				transfer_state = 1195
			}
			1195 = { 
				add_core_of = RRU
			}
		}
		
		if = {
			limit = {
				1194 = { is_owned_by = RUS }
			}
			RRU = {
				transfer_state = 1194
			}
			1194 = { 
				add_core_of = RRU
			}
		}
		
		if = {
			limit = {
				516 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 516
			}
			516 = { 
				add_core_of = RRV
			}
		}
		
		
		if = {
			limit = {
				1196 = { is_owned_by = RUS }
			}
			RRU = {
				transfer_state = 1196
			}
			1196 = { 
				add_core_of = RRU
			}
		}
		
		if = {
			limit = {
				1195 = { is_owned_by = RUS }
			}
			RRU = {
				transfer_state = 1195
			}
			1195 = { 
				add_core_of = RRU
			}
		}
		
		if = {
			limit = {
				1201 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 1201
			}
			1201 = { 
				add_core_of = RRV
			}
		}
		
		###Urals
		if = {
			limit = {
				653 = { is_owned_by = RUS }
			}
			RRU = {
				transfer_state = 653
			}
			653 = { 
				add_core_of = RRU
			}
		}
		if = {
			limit = {
				572 = { is_owned_by = RUS }
			}
			RRU = {
				transfer_state = 572
			}
			572 = { 
				add_core_of = RRU
			}
		}
		if = {
			limit = {
				403 = { is_owned_by = RUS }
			}
			RRU = {
				transfer_state = 403
			}
			403 = { 
				add_core_of = RRU
			}
		}
		if = {
			limit = {
				580 = { is_owned_by = RUS }
			}
			RRU = {
				transfer_state = 580
			}
			580 = { 
				add_core_of = RRU
			}
		}
		if = {
			limit = {
				573 = { is_owned_by = RUS }
			}
			RRU = {
				transfer_state = 573
			}
			573 = { 
				add_core_of = RRU
			}
		}
		if = {
			limit = {
				582 = { is_owned_by = RUS }
			}
			ALO = {
				transfer_state = 582
			}
			582 = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				398 = { is_owned_by = RUS }
			}
			RRU = {
				transfer_state = 398
			}
			398 = { 
				add_core_of = RRU
			}
		}
		if = {
			limit = {
				651 = { is_owned_by = RUS }
			}
			RRU = {
				transfer_state = 651
			}
			651 = { 
				add_core_of = RRU
			}
		}
		###Novosibirsk
		if = {
			limit = {
				570 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 570
			}
			570 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				571 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 571
			}
			571 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				569 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 569
			}
			569 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				578 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 578
			}
			578 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				577 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 577
			}
			577 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				1200 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 1200
			}
			1200 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				576 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 576
			}
			576 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				568 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 568
			}
			568 = { 
				add_core_of = RRV
			}
		}
		###finland
		if = {
			limit = {
				840 = { is_owned_by = RUS }
			}
			release = FIN
		}
		if = {
			limit = {
				146 = { is_owned_by = RUS }
			}
			FIN = {
				transfer_state = 146 
			}
			146  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				147 = { is_owned_by = RUS }
			}
			FIN = {
				transfer_state = 147 
			}
			147  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				213 = { is_owned_by = RUS }
			}
			FIN = {
				transfer_state = 213 
			}
			213 = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				215 = { is_owned_by = RUS }
			}
			FIN = {
				transfer_state = 215 
			}
			215  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				216 = { is_owned_by = RUS }
			}
			FIN = {
				transfer_state = 216 
			}
			216  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				722 = { is_owned_by = RUS }
			}
			FIN = {
				transfer_state = 722 
			}
			722  = { 
				add_core_of = FIN
			}
		}
		####Alash Orda
		if = {
			limit = {
				589 = { is_owned_by = RUS }
			}
			release = ALO
		}
		if = {
			limit = {
				40 = { is_owned_by = RUS }
			}
			ALO = {
				transfer_state = 40 
			}
			40  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				652 = { is_owned_by = RUS }
			}
			ALO = {
				transfer_state = 652 
			}
			652  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				583 = { is_owned_by = RUS }
			}
			ALO = {
				transfer_state = 583 
			}
			583  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				590 = { is_owned_by = RUS }
			}
			ALO = {
				transfer_state = 590 
			}
			590  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				588 = { is_owned_by = RUS }
			}
			ALO = {
				transfer_state = 588 
			}
			588  = { 
				add_core_of = ALO
			}
		}
		ALO = { set_cosmetic_tag = ALO_KAZACH }
		###turkmenistan
		if = {
			limit = {
				405 = { is_owned_by = RUS }
			}
			release = TRK
		}
		if = {
			limit = {
				861 = { is_owned_by = RUS }
			}
			release = UZB
		}
		if = {
			limit = {
				586 = { is_owned_by = RUS }
			}
			release = KYR
		}
		###mongols
		if = {
			limit = {
				330 = { is_owned_by = RUS }
			}
			set_temp_variable = { tag_to_release = MON }
			release_targeted_tag = yes
			end_puppet = MON
		}
		if = {
			limit = {
				329 = { is_owned_by = RUS }
			}
			MON = {
				transfer_state = 329 
			}
			329  = { 
				add_core_of = MON
			}
		}
		if = {
			limit = {
				654 = { is_owned_by = RUS }
			}
			MON = {
				transfer_state = 654 
			}
			654  = { 
				add_core_of = MON
			}
		}
		if = {
			limit = {
				811 = { is_owned_by = RUS }
			}
			MON = {
				transfer_state = 811 
			}
			811  = { 
				add_core_of = MON
			}
		}
		###Transamur
		if = {
			limit = {
				408 = { is_owned_by = RUS }
			}
			release = TRM
		}
		if = {
			limit = {
				644 = { is_owned_by = RUS }
			}
			TRM = {
				transfer_state = 644 
			}
			644  = { 
				add_core_of = TRM
			}
		}
		if = {
			limit = {
				575 = { is_owned_by = RUS }
			}
			TRM = {
				transfer_state = 575 
			}
			575  = { 
				add_core_of = TRM
			}
		}
		if = {
			limit = {
				566 = { is_owned_by = RUS }
			}
			TRM = {
				transfer_state = 566 
			}
			566  = { 
				add_core_of = TRM
			}
		}
		if = {
			limit = {
				567 = { is_owned_by = RUS }
			}
			TRM = {
				transfer_state = 567 
			}
			567  = { 
				add_core_of = TRM
			}
		}
		country_event = { id =  rotermorgenrussiandoom.3  }
	}
}

country_event = { #
	id = rotermorgenrussiandoom.2
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenrussiandoom.2" }
	title = rotermorgenrussiandoom.2.t
	desc = rotermorgenrussiandoom.2.d
	fire_only_once = yes
	trigger = {
		tag = SOV
		has_war_with = GRU
		surrender_progress > 0.50
		GRU = { has_country_leader = { ruling_only = yes name = "Josef Goebbels" } }
		OR = {
			GRU = {
				controls_state = 195
			}
			any_other_country = {
				is_subject_of = GRU
				controls_state = 195
			}
		}
		OR = {
			GRU = {
				controls_state = 205
			}
			any_other_country = {
				is_subject_of = GRU
				controls_state = 205
			}
		}
		OR = {
			GRU = {
				controls_state = 263
			}
			any_other_country = {
				is_subject_of = GRU
				controls_state = 263
			}
		}
		OR = {
			GRU = {
				controls_state = 217
			}
			any_other_country = {
				is_subject_of = GRU
				controls_state = 217
			}
		}
	}
	hidden = yes
	immediate = {
		###Muscovy
		if = {
			limit = {
				219 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 219
			}
			219 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				247 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 247
			}
			247 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				248 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 248
			}
			248 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				252 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 252
			}
			252 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				253 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 253
			}
			253 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				254 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 254
			}
			254 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				264 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 264
			}
			264 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				351 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 351
			}
			351 = { 
				add_core_of = RRY
			}
		}
		###Kazan
		
		if = {
			limit = {
				1199 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 1199
			}
			1199 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				1193 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 1193
			}
			1193 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				1204 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 1204
			}
			1204 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				1203 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 1203
			}
			1203 = { 
				add_core_of = RRE
			}
		}
		
		if = {
			limit = {
				1198 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 1198
			}
			1198 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				1197 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 1197
			}
			1197 = { 
				add_core_of = RRE
			}
		}
		
		if = {
			limit = {
				1205 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 1205
			}
			1205 = { 
				add_core_of = RRE
			}
		}
		
		if = {
			limit = {
				249 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 249
			}
			249 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				256 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 256
			}
			256 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				251 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 251
			}
			251 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				250 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 250
			}
			250 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				399 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 399
			}
			399 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				400 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 400
			}
			400 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				255 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 255
			}
			255 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				257 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 257
			}
			257 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				239 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 239
			}
			239 = { 
				add_core_of = RRE
			}
		}
		if = {
			limit = {
				401 = { is_owned_by = SOV }
			}
			RRE = {
				transfer_state = 401
			}
			401 = { 
				add_core_of = RRE
			}
		}
		##Komi-Nenet
		if = {
			limit = {
				397 = { is_owned_by = SOV }
			}
			RRZ = {
				transfer_state = 397
			}
			397 = { 
				add_core_of = RRZ
			}
		}
		if = {
			limit = {
				214 = { is_owned_by = SOV }
			}
			RRZ = {
				transfer_state = 214
			}
			214 = { 
				add_core_of = RRZ
			}
		}
		if = {
			limit = {
				262 = { is_owned_by = SOV }
			}
			RRZ = {
				transfer_state = 262
			}
			262 = { 
				add_core_of = RRZ
			}
		}
		if = {
			limit = {
				581 = { is_owned_by = SOV }
			}
			RRU = {
				transfer_state = 581
			}
			581 = { 
				add_core_of = RRU
			}
		}
		
		if = {
			limit = {
				1196 = { is_owned_by = SOV }
			}
			RRU = {
				transfer_state = 1196
			}
			1196 = { 
				add_core_of = RRU
			}
		}
		
		if = {
			limit = {
				1195 = { is_owned_by = SOV }
			}
			RRU = {
				transfer_state = 1195
			}
			1195 = { 
				add_core_of = RRU
			}
		}
		
		if = {
			limit = {
				1194 = { is_owned_by = SOV }
			}
			RRU = {
				transfer_state = 1194
			}
			1194 = { 
				add_core_of = RRU
			}
		}
		
		if = {
			limit = {
				516 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 516
			}
			516 = { 
				add_core_of = RRV
			}
		}
		
		if = {
			limit = {
				1201 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 1201
			}
			1201 = { 
				add_core_of = RRV
			}
		}
		###Urals
		if = {
			limit = {
				653 = { is_owned_by = SOV }
			}
			RRU = {
				transfer_state = 653
			}
			653 = { 
				add_core_of = RRU
			}
		}
		if = {
			limit = {
				572 = { is_owned_by = SOV }
			}
			RRU = {
				transfer_state = 572
			}
			572 = { 
				add_core_of = RRU
			}
		}
		if = {
			limit = {
				403 = { is_owned_by = SOV }
			}
			RRU = {
				transfer_state = 403
			}
			403 = { 
				add_core_of = RRU
			}
		}
		if = {
			limit = {
				580 = { is_owned_by = SOV }
			}
			RRU = {
				transfer_state = 580
			}
			580 = { 
				add_core_of = RRU
			}
		}
		if = {
			limit = {
				573 = { is_owned_by = SOV }
			}
			RRU = {
				transfer_state = 573
			}
			573 = { 
				add_core_of = RRU
			}
		}
		if = {
			limit = {
				582 = { is_owned_by = SOV }
			}
			ALO = {
				transfer_state = 582
			}
			582 = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				398 = { is_owned_by = SOV }
			}
			RRU = {
				transfer_state = 398
			}
			398 = { 
				add_core_of = RRU
			}
		}
		if = {
			limit = {
				651 = { is_owned_by = SOV }
			}
			RRU = {
				transfer_state = 651
			}
			651 = { 
				add_core_of = RRU
			}
		}
		###Novosibirsk
		if = {
			limit = {
				570 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 570
			}
			570 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				571 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 571
			}
			571 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				569 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 569
			}
			569 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				578 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 578
			}
			578 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				577 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 577
			}
			577 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				1200 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 1200
			}
			1200 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				576 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 576
			}
			576 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				568 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 568
			}
			568 = { 
				add_core_of = RRV
			}
		}
		###finland
		if = {
			limit = {
				840 = { is_owned_by = SOV }
			}
			release = FIN
		}
		if = {
			limit = {
				146 = { is_owned_by = SOV }
			}
			FIN = {
				transfer_state = 146 
			}
			146  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				147 = { is_owned_by = SOV }
			}
			FIN = {
				transfer_state = 147 
			}
			147  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				213 = { is_owned_by = SOV }
			}
			FIN = {
				transfer_state = 213 
			}
			213 = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				215 = { is_owned_by = SOV }
			}
			FIN = {
				transfer_state = 215 
			}
			215  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				216 = { is_owned_by = SOV }
			}
			FIN = {
				transfer_state = 216 
			}
			216  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				722 = { is_owned_by = SOV }
			}
			FIN = {
				transfer_state = 722 
			}
			722  = { 
				add_core_of = FIN
			}
		}
		####Alash Orda
		if = {
			limit = {
				589 = { is_owned_by = SOV }
			}
			release = ALO 
		}
		if = {
			limit = {
				40 = { is_owned_by = SOV }
			}
			ALO = {
				transfer_state = 40 
			}
			40  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				652 = { is_owned_by = SOV }
			}
			ALO = {
				transfer_state = 652 
			}
			652  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				583 = { is_owned_by = SOV }
			}
			ALO = {
				transfer_state = 583 
			}
			583  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				590 = { is_owned_by = SOV }
			}
			ALO = {
				transfer_state = 590 
			}
			590  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				588 = { is_owned_by = SOV }
			}
			ALO = {
				transfer_state = 588 
			}
			588  = { 
				add_core_of = ALO
			}
		}
		ALO = { set_cosmetic_tag = ALO_KAZACH }
		###turkmenistan
		if = {
			limit = {
				405 = { is_owned_by = SOV }
			}
			release = TRK
		}
		if = {
			limit = {
				861 = { is_owned_by = SOV }
			}
			release = UZB
		}
		if = {
			limit = {
				586 = { is_owned_by = SOV }
			}
			release = KYR
		}
		###mongols
		if = {
			limit = {
				330 = { is_owned_by = SOV }
			}
			set_temp_variable = { tag_to_release = MON }
			release_targeted_tag = yes
			end_puppet = MON
		}
		if = {
			limit = {
				329 = { is_owned_by = SOV }
			}
			MON = {
				transfer_state = 329 
			}
			329  = { 
				add_core_of = MON
			}
		}
		if = {
			limit = {
				654 = { is_owned_by = SOV }
			}
			MON = {
				transfer_state = 654 
			}
			654  = { 
				add_core_of = MON
			}
		}
		if = {
			limit = {
				811 = { is_owned_by = SOV }
			}
			MON = {
				transfer_state = 811 
			}
			811  = { 
				add_core_of = MON
			}
		}
		###Transamur
		if = {
			limit = {
				408 = { is_owned_by = SOV }
			}
			release = TRM
		}
		if = {
			limit = {
				644 = { is_owned_by = SOV }
			}
			TRM = {
				transfer_state = 644 
			}
			644  = { 
				add_core_of = TRM
			}
		}
		if = {
			limit = {
				575 = { is_owned_by = SOV }
			}
			TRM = {
				transfer_state = 575 
			}
			575  = { 
				add_core_of = TRM
			}
		}
		if = {
			limit = {
				566 = { is_owned_by = SOV }
			}
			TRM = {
				transfer_state = 566 
			}
			566  = { 
				add_core_of = TRM
			}
		}
		if = {
			limit = {
				567 = { is_owned_by = SOV }
			}
			TRM = {
				transfer_state = 567 
			}
			567  = { 
				add_core_of = TRM
			}
		}
		
		country_event = { id =  rotermorgenrussiandoom.3  }
	}
}
news_event = { #
	id = rotermorgenrussiandoom.3
	major = yes 
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenrussiandoom.3" }
	fire_only_once = yes
	title = rotermorgenrussiandoom.3.t
	desc = rotermorgenrussiandoom.3.d
	picture = GFX_news_event_capture_moscow
	is_triggered_only = yes 
	option = {
		name = rotermorgenrussiandoom.3.a
	}
}

add_namespace = rotermorgenmisc

country_event = { # SYNTHWAVE
	id = rotermorgenmisc.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.1" }
	title = rotermorgenmisc.1.t
	desc = rotermorgenmisc.1.d
	picture = GFX_report_event_synthwave
	is_triggered_only = yes
	
	option = { # SYNTHWAVE yes
		name = rotermorgenmisc.1.a
		add_ideas = GRU_SYNTHWAVE
	}
	option = { # SYNTHWAVE no
		name = rotermorgenmisc.1.b
		add_manpower = -1
	}
}
country_event = { # portraitswapper
	id = rotermorgenmisc.2
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.2" }
	title = rotermorgenmisc.2.t
	desc = rotermorgenmisc.2.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
					create_country_leader = {
							name = "Josef Goebbels"
							desc = "GRU_GOEBBELS_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Josef_Goebbels_14.png"
							expire = "1965.1.1"
							ideology = national_marxist_subtype
							traits = {
								gru_froncophobe
							}
					}
					if = {	
						limit = { has_country_leader = { name = "Josef Goebbels" ruling_only = yes } }
						set_country_leader_portrait = {
							portrait = "gfx/leaders/GRU/Portrait_Germany_Josef_Goebbels_14.png"
						}
					}
					create_country_leader = {
							name = "Josef Goebbels"
							desc = "GRU_GOEBBELS_DESC"
							picture = "gfx/leaders/GRU/Portrait_Germany_Josef_Goebbels_14.png"
							expire = "1965.1.1"
							ideology = national_populist_subtype
							traits = {
								gru_froncophobe
								gru_volksfuehrer
							}
					}
	}
}

country_event = { # portraitswapper
	id = rotermorgenmisc.3
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.3" }
	title = rotermorgenmisc.3.t
	desc = rotermorgenmisc.3.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
	create_country_leader = {
							name = "Communal Councils"
							desc = "GRU_Councils_DESC"
							picture = "gfx/leaders/GRU/councilism.png"
							expire = "1965.1.1"
							ideology = anarcho_syndicalist_subtype
				}
	}
}


country_event = { # Futhark
	id = rotermorgenmisc.4
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.4" }
	title = rotermorgenmisc.4.t
	desc = rotermorgenmisc.4.d
	picture = GFX_report_event_futhark
	is_triggered_only = yes
	
	option = { 
		name = rotermorgenmisc.4.a
		add_ideas = GRU_FUTHARK
	}
}


country_event = { # Blank Canvas
	id = rotermorgenmisc.5
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.5" }
	title = rotermorgenmisc.5.t
	desc = rotermorgenmisc.5.d
	picture = GFX_report_event_trueartisthis
	is_triggered_only = yes
	
	option = { 
		name = rotermorgenmisc.5.a
	}
}

country_event = { # Susi
	id = rotermorgenmisc.6
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.6" }
	title = rotermorgenmisc.6.t
	desc = rotermorgenmisc.6.d
	picture = GFX_report_event_Susi_dog
	is_triggered_only = yes
	
	option = { 
		name = rotermorgenmisc.6.a
	}
}

country_event = { # Liebknecht retires
	id = rotermorgenmisc.7
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.7" }
	title = rotermorgenmisc.7.t
	desc = rotermorgenmisc.7.d
	picture = GFX_report_event_Liebknecht_rente
	is_triggered_only = yes
	fire_only_once = yes
	
	option = { 
		name = rotermorgenmisc.7.a
		set_country_flag = GRU_LIEBKNECHT_RETIRED
	}
}


country_event = { # DAF
	id = rotermorgenmisc.8
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.8" }
	title = rotermorgenmisc.8.t
	desc = rotermorgenmisc.8.d
	picture = GFX_report_event_DAF
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.8.a
	}
}

country_event = { # VW
	id = rotermorgenmisc.9
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.9" }
	title = rotermorgenmisc.9.t
	desc = rotermorgenmisc.9.d
	picture = GFX_report_event_VW
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.9.a
	}
}

country_event = { # VE
	id = rotermorgenmisc.10
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.10" }
	title = rotermorgenmisc.10.t
	desc = rotermorgenmisc.10.d
	picture = GFX_report_event_VE
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.10.a
	}
}

country_event = { # VF
	id = rotermorgenmisc.11
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.11" }
	title = rotermorgenmisc.11.t
	desc = rotermorgenmisc.11.d
	picture = GFX_report_event_VF
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.11.a
	}
}

country_event = { # KDF
	id = rotermorgenmisc.12
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.12" }
	title = rotermorgenmisc.12.t
	desc = rotermorgenmisc.12.d
	picture = GFX_report_event_KDF
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.12.a
	}
}

country_event = { # SDA
	id = rotermorgenmisc.13
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.13" }
	title = rotermorgenmisc.13.t
	desc = rotermorgenmisc.13.d
	picture = GFX_report_event_SDA
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.13.a
	}
}

country_event = { # VG
	id = rotermorgenmisc.14
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.14" }
	title = rotermorgenmisc.14.t
	desc = rotermorgenmisc.14.d
	picture = GFX_report_event_VG
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.14.a
	}
}

country_event = { # Men among Men
	id = rotermorgenmisc.15
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.15" }
	title = rotermorgenmisc.15.t
	desc = rotermorgenmisc.15.d
	picture = GFX_report_event_MAM
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.15.a
	}
}

country_event = { # bruh not cool
	id = rotermorgenmisc.16
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.16" }
	title = rotermorgenmisc.16.t
	desc = rotermorgenmisc.16.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.16.a
	}
}

country_event = { # Pieck Secret Police
	id = rotermorgenmisc.17
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.17" }
	title = rotermorgenmisc.17.t
	desc = rotermorgenmisc.17.d
	picture = GFX_report_event_PIECK_STATUE
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.17.a
	}
}

country_event = { # Pieck ugly houses
	id = rotermorgenmisc.18
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.18" }
	title = rotermorgenmisc.18.t
	desc = rotermorgenmisc.18.d
	picture = GFX_report_event_ugly_houses
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.18.a
	}
}

country_event = { # Pieck speed run trail
	id = rotermorgenmisc.19
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.19" }
	title = rotermorgenmisc.19.t
	desc = rotermorgenmisc.19.d
	picture = GFX_report_event_speed_run_purge
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.19.a
	}
}

country_event = { # day in munich
	id = rotermorgenmisc.20
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.20" }
	title = rotermorgenmisc.20.t
	desc = rotermorgenmisc.20.d
	picture = GFX_report_event_rudi
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.20.a
	}
}

country_event = { # A New Curriculum
	id = rotermorgenmisc.21
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.21" }
	title = rotermorgenmisc.21.t
	desc = rotermorgenmisc.21.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.21.a
	}
}

country_event = { # Love is Love
	id = rotermorgenmisc.22
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.22" }
	title = rotermorgenmisc.22.t
	desc = rotermorgenmisc.22.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.22.a
	}
}

country_event = { # The Vanguard of the Working Class
	id = rotermorgenmisc.23
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.23" }
	title = rotermorgenmisc.23.t
	desc = rotermorgenmisc.23.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.23.a
	}
}

country_event = { # Pogge quotas
	id = rotermorgenmisc.24
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.24" }
	title = rotermorgenmisc.24.t
	desc = rotermorgenmisc.24.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.24.a
	}
}

country_event = { # Gestapo
	id = rotermorgenmisc.25
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.25" }
	title = rotermorgenmisc.25.t
	desc = rotermorgenmisc.25.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.25.a
	}
}

country_event = { # Cultural Revolution
	id = rotermorgenmisc.26
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.26" }
	title = rotermorgenmisc.26.t
	desc = rotermorgenmisc.26.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.26.a
	}
}

country_event = { # The Last Laugh
	id = rotermorgenmisc.27
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.27" }
	title = rotermorgenmisc.27.t
	desc = rotermorgenmisc.27.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.27.a
	}
}

country_event = { # The Suffrage of the Other Sex
	id = rotermorgenmisc.28
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.28" }
	title = rotermorgenmisc.28.t
	desc = rotermorgenmisc.28.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.28.a
	}
}

country_event = { # The Stalking Woods
	id = rotermorgenmisc.29
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.29" }
	title = rotermorgenmisc.29.t
	desc = rotermorgenmisc.29.d
	picture = GFX_report_event_GOTHI
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.29.a
	}
}
country_event = { # All to the Chairman 
	id = rotermorgenmisc.30
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.30" }
	title = rotermorgenmisc.30.t
	desc = rotermorgenmisc.30.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.30.a
	}
}
country_event = { # The Dark Red Constitution Part I
	id = rotermorgenmisc.31
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.31" }
	title = rotermorgenmisc.31.t
	desc = rotermorgenmisc.31.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.31.a
		country_event = { id =  rotermorgenmisc.32 }
	}
}
country_event = { # The Dark Red Constitution Part II
	id = rotermorgenmisc.32
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.32" }
	title = rotermorgenmisc.32.t
	desc = rotermorgenmisc.32.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.32.a
		country_event = { id =  rotermorgenmisc.33 }
	}
}
country_event = { # The Finishing Touches
	id = rotermorgenmisc.33
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.33" }
	title = rotermorgenmisc.33.t
	desc = rotermorgenmisc.33.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.33.a
	}
}

country_event = { # The Bright Red Constitution Part I
	id = rotermorgenmisc.34
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.34" }
	title = rotermorgenmisc.34.t
	desc = rotermorgenmisc.34.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.34.a
		country_event = { id =  rotermorgenmisc.35 }
	}
}

country_event = { # The Bright Red Constitution Part II
	id = rotermorgenmisc.35
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.35" }
	title = rotermorgenmisc.35.t
	desc = rotermorgenmisc.35.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.35.a
		country_event = { id =  rotermorgenmisc.36 }
	}
}

country_event = { # The Finishing Touches
	id = rotermorgenmisc.36
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.36" }
	title = rotermorgenmisc.36.t
	desc = rotermorgenmisc.36.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.36.a
	}
}

country_event = { # Volksf√ºhrerprinzip
	id = rotermorgenmisc.37
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.37" }
	title = rotermorgenmisc.37.t
	desc = rotermorgenmisc.37.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.37.a
	}
}



country_event = { # The Doctors of the Revolution
	id = rotermorgenmisc.38
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.38" }
	title = rotermorgenmisc.38.t
	desc = rotermorgenmisc.38.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.38.a
	}
}

country_event = { # The New German Cinema
	id = rotermorgenmisc.39
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.39" }
	title = rotermorgenmisc.39.t
	desc = rotermorgenmisc.39.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.39.a
	}
}

country_event = { # A Germanic Epic
	id = rotermorgenmisc.1040
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.1040" }
	title = rotermorgenmisc.1040.t
	desc = rotermorgenmisc.1040.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.1040.a
		hidden_effect = {
			country_event = { id =  rotermorgenmisc.1041 }
		}
	}
}

country_event = { # A Night at the Theatre
	id = rotermorgenmisc.1041
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.1041" }
	title = rotermorgenmisc.1041.t
	desc = rotermorgenmisc.1041.d
	picture = GFX_report_event_SEINKAMPF
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.1041.a
	}
}


country_event = { # Germania Start
	id = rotermorgenmisc.2000
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.2000" }
	title = rotermorgenmisc.2000.t
	desc = rotermorgenmisc.2000.d
	picture = GFX_report_event_GERMANIA
	is_triggered_only = yes
	option = { #berlin
		name = rotermorgenmisc.2000.a
		set_country_flag = Germania_berlin
		hidden_effect = {
			country_event = { id =  rotermorgenmisc.2001 days = 200 }
			add_ideas = BUILDING_GERMANIA
		}
	}
	option = { #Imursil PAderborn
		name = rotermorgenmisc.2000.b
		set_country_flag = Germania_imursil
		hidden_effect = {
			country_event = { id =  rotermorgenmisc.2001 days = 200 }
			add_ideas = BUILDING_GERMANIA
		}
	}
	option = { # between wilhelmshaven and hamburg
		name = rotermorgenmisc.2000.c
		set_country_flag = Germania_north_sea
		hidden_effect = {
			country_event = { id =  rotermorgenmisc.2001 days = 200 }
			add_ideas = BUILDING_GERMANIA
		}
	}
	option = { #pommerania
		name = rotermorgenmisc.2000.e
		set_country_flag = Germania_pommerania
		hidden_effect = {
			country_event = { id =  rotermorgenmisc.2001 days = 200 }
			add_ideas = BUILDING_GERMANIA
		}
	}
	option = { #heart of germany
		name = rotermorgenmisc.2000.f
		set_country_flag = Germania_franconia
		hidden_effect = {
			country_event = { id =  rotermorgenmisc.2001 days = 200 }
			add_ideas = BUILDING_GERMANIA
		}
	}
}

country_event = { # Germania city rings
	id = rotermorgenmisc.2001
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.2001" }
	title = rotermorgenmisc.2001.t
	desc = rotermorgenmisc.2001.d
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.2001.a
		hidden_effect = {
			country_event = { id =  rotermorgenmisc.2002 days = 120 }
		}
	}
}

country_event = { # Germania Arc
	id = rotermorgenmisc.2002
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.2002" }
	title = rotermorgenmisc.2002.t
	desc = rotermorgenmisc.2002.d
	picture = GFX_report_event_TRIUMPHARC
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.2002.a
		hidden_effect = {
			country_event = { id =  rotermorgenmisc.2003 days = 140 }
		}
	}
}

country_event = { # Germania Hermann
	id = rotermorgenmisc.2003
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.2003" }
	title = rotermorgenmisc.2003.t
	desc = rotermorgenmisc.2003.d
	picture = GFX_report_event_HERMANN
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.2003.a
		hidden_effect = {
			country_event = { id =  rotermorgenmisc.2004 days = 100 }
		}
	}
}

country_event = { # Germania Stadtbahn
	id = rotermorgenmisc.2004
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.2004" }
	title = rotermorgenmisc.2004.t
	desc = rotermorgenmisc.2004.d
	picture = GFX_report_event_BAHN
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.2004.a
		hidden_effect = {
			country_event = { id =  rotermorgenmisc.2005 days = 120 }
		}
	}
}

country_event = { # Germania Lufthafen
	id = rotermorgenmisc.2005
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.2005" }
	title = rotermorgenmisc.2005.t
	desc = rotermorgenmisc.2005.d
	picture = GFX_report_event_LUFTHAFEN
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.2005.a
		hidden_effect = {
			if = {
				limit = {
					OR = {
						GRU = { has_country_flag = Germania_north_sea }
						GRU = { has_country_flag = Germania_pommerania }
					}
				}
				country_event = { id =  rotermorgenmisc.2006 days = 80 }
			}
			else = {
				country_event = { id =  rotermorgenmisc.2007 days = 120 }
			}
		}
	}
}

country_event = { # Germania harbor
	id = rotermorgenmisc.2006
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.2006" }
	title = rotermorgenmisc.2006.t
	desc = rotermorgenmisc.2006.d
	picture = GFX_report_event_GERMANIHAFEN
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.2006.a
		hidden_effect = {
			country_event = { id =  rotermorgenmisc.2007 days = 100 }
		}
	}
}

country_event = { # Germania stadium
	id = rotermorgenmisc.2007
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.2007" }
	title = rotermorgenmisc.2007.t
	desc = rotermorgenmisc.2007.d
	picture = GFX_report_event_GERMANIASTADIUM
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.2007.a
		hidden_effect = {
			country_event = { id =  rotermorgenmisc.2008 days = 125 }
		}
	}
}

country_event = { # Germania Hero hall
	id = rotermorgenmisc.2008
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.2008" }
	title = rotermorgenmisc.2008.t
	desc = rotermorgenmisc.2008.d
	picture = GFX_report_event_HEROHALL
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.2008.a
		hidden_effect = {
			country_event = { id =  rotermorgenmisc.2009 days = 100 }
		}
	}
}

country_event = { # Germania Volkshalle
	id = rotermorgenmisc.2009
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.2009" }
	title = rotermorgenmisc.2009.t
	desc = rotermorgenmisc.2009.d
	picture = GFX_report_event_volkshalle
	is_triggered_only = yes
	option = { 
		name = rotermorgenmisc.2009.a
		hidden_effect = {
			country_event = { id =  rotermorgenmisc.2010 days = 70 }
		}
	}
}

country_event = { # Germania finished
	id = rotermorgenmisc.2010
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.2010" }
	title = rotermorgenmisc.2010.t
	desc = rotermorgenmisc.2010.d
	picture = GFX_report_event_GERMANIAFINISHED
	is_triggered_only = yes
	option = { #
		name = rotermorgenmisc.2010.a
		remove_ideas = BUILDING_GERMANIA
		add_ideas = GERMANIA_STADT
	hidden_effect = {
	set_country_flag = GRU_GERMANIA_FINISHED
	if = {
			limit = {
			GRU = { has_country_flag = Germania_berlin }
			}
		add_victory_points = {
				province = 6521
				value = 50
			}		
		set_province_name = { id = 6521 name = "Festungsstadt Germania"}
		64 = {
			add_building_construction = {
				type = infrastructure
				level = 8
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 20
				instant_build = yes
			}
			add_building_construction = {
				type = anti_air_building
				level = 10
				instant_build = yes
			}
			add_building_construction = {
				type = radar_station
				level = 10
				instant_build = yes
			}
			add_building_construction = {
					type = bunker
					province = 11431
					level = 10
					instant_build = yes
			}
		}
	}
	if = {
			limit = {
			GRU = { has_country_flag = Germania_imursil }
			}
		add_victory_points = {
				province = 11431
				value = 100
			}		
		set_province_name = { id = 11431 name = "Festungsstadt Germania"}
		57 = {
			add_building_construction = {
				type = infrastructure
				level = 8
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 20
				instant_build = yes
			}
			add_building_construction = {
				type = anti_air_building
				level = 10
				instant_build = yes
			}
			add_building_construction = {
				type = radar_station
				level = 10
				instant_build = yes
			}
			add_building_construction = {
					type = bunker
					province = 11431
					level = 10
					instant_build = yes
				}
		}
		set_capital = { state = 57 }
	}
	if = {
			limit = {
			GRU = { has_country_flag = Germania_north_sea }
			}
		add_victory_points = {
				province = 374
				value = 100
			}		
		set_province_name = { id = 374 name = "Festungsstadt Germania"}
		59 = {
			add_building_construction = {
				type = infrastructure
				level = 8
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 20
				instant_build = yes
			}
			add_building_construction = {
				type = anti_air_building
				level = 10
				instant_build = yes
			}
			add_building_construction = {
				type = radar_station
				level = 10
				instant_build = yes
			}
			add_building_construction = {
					type = bunker
					province = 374
					level = 10
					instant_build = yes
				}
			add_building_construction = {
					type = naval_base
					province = 374
					level = 10
					instant_build = yes
				}
			add_building_construction = {
					type = coastal_bunker
					province = 374
					level = 10
					instant_build = yes
				}
		}
		set_capital = { state = 59 }
	}
	if = {
			limit = {
			GRU = { has_country_flag = Germania_pommerania }
			}
		add_victory_points = {
				province = 11343
				value = 100
			}		
		set_province_name = { id = 11343 name = "Festungsstadt Germania"}
		63 = {
			add_building_construction = {
				type = infrastructure
				level = 8
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 20
				instant_build = yes
			}
			add_building_construction = {
				type = anti_air_building
				level = 10
				instant_build = yes
			}
			add_building_construction = {
				type = radar_station
				level = 10
				instant_build = yes
			}
			add_building_construction = {
					type = bunker
					province = 11343
					level = 10
					instant_build = yes
				}
			add_building_construction = {
					type = naval_base
					province = 11343
					level = 10
					instant_build = yes
				}
			add_building_construction = {
					type = coastal_bunker
					province = 11343
					level = 10
					instant_build = yes
				}
		}
		set_capital = { state = 63 }
	}
	if = {
			limit = {
			GRU = { has_country_flag = Germania_franconia }
			}
		add_victory_points = {
				province = 3474
				value = 100
			}		
		set_province_name = { id = 3474 name = "Festungsstadt Germania"}
		54 = {
			add_building_construction = {
				type = infrastructure
				level = 8
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 20
				instant_build = yes
			}
			add_building_construction = {
				type = anti_air_building
				level = 10
				instant_build = yes
			}
			add_building_construction = {
				type = radar_station
				level = 10
				instant_build = yes
			}
			add_building_construction = {
					type = bunker
					province = 3474
					level = 10
					instant_build = yes
				}
		}
		set_capital = { state = 54 }
	}
	}
	}
}


country_event = { # allignment
	id = rotermorgenmisc.40
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.40" }
	title = rotermorgenmisc.40.t
	desc = rotermorgenmisc.40.d
	is_triggered_only = yes
	
	option = { # join germany
		name = rotermorgenmisc.40.a
		ai_chance = {
			factor = 90
		}
		GRU = {
		add_to_faction = ROOT
		}
	}
	option = { # fuck germany
		name = rotermorgenmisc.40.b
		ai_chance = {
			factor = 10
		}
		add_opinion_modifier = {
			target = GRU
			modifier = ITA_dislikes_govt
		}
	}
}

country_event = { # country now leaves the french
	id = rotermorgenmisc.50
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.50" }
	title = rotermorgenmisc.50.t
	desc = rotermorgenmisc.50.d
	is_triggered_only = yes
	
	option = { # fuck france
		name = rotermorgenmisc.50.a
		ai_chance = {
			factor = 40
			modifier = {
				factor = 0
				has_opinion = {
					target = GRU
					value < 0
				}
			}
			modifier = {
				factor = 100
				has_opinion = {
					target = GRU
					value > 60
				}
			}
		}
		if = {
			limit = {
				is_in_faction_with = FRA
			}
			leave_faction = yes
		}
		if = {
			limit = {
				is_subject = no
				has_war_with = GRU
			}
			separate_peace_all_wars = yes
		}
	}
	option = { # fuck germany
		name = rotermorgenmisc.50.b
		ai_chance = {
			factor = 60
			modifier = {
				factor = 100
				has_opinion = {
					target = GRU
					value < 0
				}
			}
			modifier = {
				factor = 0
				has_opinion = {
					target = GRU
					value > 60
				}
			}
		}
		add_opinion_modifier = {
			target = GRU
			modifier = ITA_dislikes_govt
		}
	}
}

country_event = { # war against france for french puppet
	id = rotermorgenmisc.60
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.60" }
	title = rotermorgenmisc.60.t
	desc = rotermorgenmisc.60.d
	is_triggered_only = yes
	
	option = { # fuck france
		name = rotermorgenmisc.60.a
		ai_chance = {
			factor = 40
			modifier = {
				factor = 0
				has_opinion = {
					target = GRU
					value < 0
				}
			}
			modifier = {
				factor = 100
				has_opinion = {
					target = GRU
					value > 60
				}
			}
		}
		if = {
			limit = {
				is_in_faction_with = FRA
			}
			leave_faction = yes
			FRA = { end_puppet = ROOT }
			ROOT = {
				declare_war_on = {
					target = FRA
					type = annex_everything
				}
			}
		}
		if = {
			limit = {
				is_subject = no
				has_war_with = GRU
			}
			separate_peace_all_wars = yes
		}
	}
	option = { # fuck germany
		name = rotermorgenmisc.60.b
		ai_chance = {
			factor = 60
			modifier = {
				factor = 100
				has_opinion = {
					target = GRU
					value < 0
				}
			}
			modifier = {
				factor = 0
				has_opinion = {
					target = GRU
					value > 60
				}
			}
		}
		add_opinion_modifier = {
			target = GRU
			modifier = ITA_dislikes_govt
		}
	}
}

country_event = { # preasure on Deat
	id = rotermorgenmisc.70
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.70" }
	title = rotermorgenmisc.70.t
	desc = rotermorgenmisc.70.d
	is_triggered_only = yes
	
	option = { # 
		name = rotermorgenmisc.70.a
		ai_chance = {
			factor = 20
			modifier = {
				factor = 100
				num_faction_members < 2
			}
			modifier = {
				factor = 0
				num_faction_members > 4
			}
		}
		GRU = {
		add_to_faction = ROOT
		}
		GRU = {
			hidden_effect = {
				country_event = {
				id = rotermorgenmisc.80
				days = 2
				}
			}
		}
	}
	option = { # 
		name = rotermorgenmisc.70.b
		ai_chance = {
			factor = 80
			modifier = {
				factor = 0
				num_faction_members < 2
			}
			modifier = {
				factor = 100
				num_faction_members > 4
			}
		}
		add_opinion_modifier = {
			target = GRU
			modifier = ITA_dislikes_govt
		}
		GRU = {
			hidden_effect = {
				country_event = {
				id = rotermorgenmisc.90
				days = 2
				}
			}
		}
	}
}

country_event = { # Deat gives in
	id = rotermorgenmisc.80
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.80" }
	title = rotermorgenmisc.80.t
	desc = rotermorgenmisc.80.d
	is_triggered_only = yes
	
	option = { # 
		name = rotermorgenmisc.80.a
		transfer_state = 28
		transfer_state = 779
		if = {
			limit = {
			8 = { is_owned_and_controlled_by = FRA }
			}
		transfer_state = 8
		}
		if = {
			limit = {
			42 = { is_owned_and_controlled_by = FRA }
			}
		transfer_state = 42
		}
		if = {
			limit = {
			781 = { is_owned_and_controlled_by = FRA }
			}
		transfer_state = 781
		}
		if = {
			limit = {
			741 = { is_owned_and_controlled_by = FRA }
			}
		transfer_state = 741
		}
	}
}

country_event = { # Deat refuses
	id = rotermorgenmisc.90
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.90" }
	title = rotermorgenmisc.90.t
	desc = rotermorgenmisc.90.d
	is_triggered_only = yes
	
	option = { # 
		name = rotermorgenmisc.90.a
		ai_chance = {
			factor = 80
		}
		declare_war_on = {
			target = FRA
			type = annex_everything
		}
		28 = {
			add_claim_by = GRU
			}
		779 = {
			add_claim_by = GRU
			}
	}
	
	option = { # 
		name = rotermorgenmisc.90.b
		ai_chance = {
			factor = 20
		}

		add_political_power = -200
	}
}

country_event = { # allignment
	id = rotermorgenmisc.100
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.100" }
	title = rotermorgenmisc.100.t
	desc = rotermorgenmisc.100.d
	is_triggered_only = yes
	
	option = { # join germany
		name = rotermorgenmisc.100.a
		ai_chance = {
			factor = 80
			modifier = {
				factor = 0
				has_opinion = {
					target = GRU
					value < 0
				}
			}
			modifier = {
				factor = 100
				has_opinion = {
					target = GRU
					value > 60
				}
			}
		}
		GRU = {
		add_to_faction = ROOT
		}
	}
	option = { # fuck germany
		name = rotermorgenmisc.100.b
		ai_chance = {
			factor = 20
			modifier = {
				factor = 100
				has_opinion = {
					target = GRU
					value < 0
				}
			}
			modifier = {
				factor = 0
				has_opinion = {
					target = GRU
					value > 60
				}
			}
		}
		add_opinion_modifier = {
			target = GRU
			modifier = ITA_dislikes_govt
		}
		GRU = {
			hidden_effect = {
				country_event = {
				id = rotermorgenmisc.110
				days = 2
				}
			}
		}
	}
}

country_event = {
	id = rotermorgenmisc.110
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.110" }
	title = rotermorgenmisc.110.t
	desc = rotermorgenmisc.110.d
	is_triggered_only = yes
	
	option = { # 
		name = rotermorgenmisc.110.a
		ai_chance = {
			factor = 80
		}
		declare_war_on = {
			target = FROM
			type = annex_everything
		}
	}
	
	option = { # 
		name = rotermorgenmisc.110.b
		ai_chance = {
			factor = 20
		}

		add_political_power = -200
	}
}




country_event = { # VKR claims
	id = rotermorgenmisc.200
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.200" }
	title = rotermorgenmisc.200.t
	desc = rotermorgenmisc.200.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
				202 = {
					add_claim_by = VKR
				}
				241 = {
					add_claim_by = VKR
				}
				997 = {
					add_claim_by = VKR
				}
				93 = {
					add_claim_by = VKR
				}	
				792 = {
					add_claim_by = VKR
				}
				95 = {
					add_claim_by = VKR
				}
				194 = {
					add_claim_by = VKR
				}
				201 = {
					add_claim_by = VKR
				}
				199 = {
					add_claim_by = VKR
				}
				198 = {
					add_claim_by = VKR
				}
				791 = {
					add_claim_by = VKR
				}
				78 = {
					add_claim_by = VKR
				}
				192 = {
					add_claim_by = VKR
				}
				202 = {
					add_claim_by = VKR
				}
				203 = {
					add_claim_by = VKR
				}
				197 = {
					add_claim_by = VKR
				}
				196 = {
					add_claim_by = VKR
				}
				137 = {
					add_claim_by = VKR
				}
				193 = {
					add_claim_by = VKR
				}
				259 = {
					add_claim_by = VKR
				}
				226 = {
					add_claim_by = VKR
				}
				200 = {
					add_claim_by = VKR
				}
				224 = {
					add_claim_by = VKR
				}
				225 = {
					add_claim_by = VKR
				}		
				220 = {
					add_claim_by = VKR
				}
				221 = {
					add_claim_by = VKR
				}
				222 = {
					add_claim_by = VKR
				}
				223 = {
					add_claim_by = VKR
				}
				258 = {
					add_claim_by = VKR
				}
				260 = {
					add_claim_by = VKR
				}
				265 = {
					add_claim_by = VKR
				}
				245 = {
					add_claim_by = VKR
				}
				218 = {
					add_claim_by = VKR
				}
				228 = {
					add_claim_by = VKR
				}
				240 = {
					add_claim_by = VKR
				}
				227 = {
					add_claim_by = VKR
				}
				821 = {
					add_claim_by = VKR
				}
				79 = {
					add_claim_by = VKR
				}
				713 = {
					add_claim_by = VKR
				}
				80 = {
					add_claim_by = VKR
				}
	}
}

country_event = { # VKR OIL KIEV
	id = rotermorgenmisc.201
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.201" }
	title = rotermorgenmisc.201.t
	desc = rotermorgenmisc.201.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
	hidden_effect = {
	give_resource_rights = { receiver = GRU state = 202 }
	}
	}
}

country_event = { # VKR OIL
	id = rotermorgenmisc.202
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.202" }
	title = rotermorgenmisc.202.t
	desc = rotermorgenmisc.202.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
	hidden_effect = {
	give_resource_rights = { receiver = GRU state = 226 }
	}
	}
}

country_event = { # VKR OIL
	id = rotermorgenmisc.203
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.203" }
	title = rotermorgenmisc.203.t
	desc = rotermorgenmisc.203.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
	hidden_effect = {
	give_resource_rights = { receiver = GRU state = 221 }
	}
	}
}

country_event = { # VKK claims
	id = rotermorgenmisc.300
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.300" }
	title = rotermorgenmisc.300.t
	desc = rotermorgenmisc.300.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
				990 = {
					add_claim_by = VKK
				}
				229 = {
					add_claim_by = VKK
				}
				998 = {
					add_claim_by = VKK
				}	
				230 = {
					add_claim_by = VKK
				}
				231 = {
					add_claim_by = VKK
				}
				1082 = {
					add_claim_by = VKK
				}
				1080 = {
					add_claim_by = VKK
				}
				232 = {
					add_claim_by = VKK
				}
				787 = {
					add_claim_by = VKK
				}
				233 = {
					add_claim_by = VKK
				}
				234 = {
					add_claim_by = VKK
				}
				235 = {
					add_claim_by = VKK
				}
				787 = {
					add_claim_by = VKK
				}
				237 = {
					add_claim_by = VKK
				}
				238 = {
					add_claim_by = VKK
				}
				236 = {
					add_claim_by = VKK
				}
				217 = {
					add_claim_by = VKK
				}
				1190 = {
					add_claim_by = VKK
				}
				1189 = {
					add_claim_by = VKK
				}
				1186 = {
					add_claim_by = VKK
				}
				1187 = {
					add_claim_by = VKK
				}
				1188 = {
					add_claim_by = VKK
				}
				1191 = {
					add_claim_by = VKK
				}
				
				
				
				1001 = {
					add_claim_by = VKK
				}
				1000 = {
					add_claim_by = VKK
				}
				355 = {
					add_claim_by = VKK
				}
				354 = {
					add_claim_by = VKK
				}
				352 = {
					add_claim_by = VKK
				}
				417 = {
					add_claim_by = VKK
				}
				419 = {
					add_claim_by = VKK
				}
				420 = {
					add_claim_by = VKK
				}
	}
}

country_event = { # VKK OIL BAKU
	id = rotermorgenmisc.301
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.301" }
	title = rotermorgenmisc.301.t
	desc = rotermorgenmisc.301.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
	hidden_effect = {
	give_resource_rights = { receiver = GRU state = 990 }
	}
	}
}

country_event = { # VKK OIL AZE
	id = rotermorgenmisc.302
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.302" }
	title = rotermorgenmisc.302.t
	desc = rotermorgenmisc.302.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
	hidden_effect = {
	give_resource_rights = { receiver = GRU state = 229 }
	}
	}
}

country_event = { # VKK OIL AZE
	id = rotermorgenmisc.303
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.303" }
	title = rotermorgenmisc.303.t
	desc = rotermorgenmisc.303.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
	hidden_effect = {
				give_resource_rights = { receiver = GRU state = 232 }
				give_resource_rights = { receiver = GRU state = 787 }
				give_resource_rights = { receiver = GRU state = 233 }
	}
	}
}
country_event = { # VKK OIL AZE
	id = rotermorgenmisc.304
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.304" }
	title = rotermorgenmisc.304.t
	desc = rotermorgenmisc.304.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
	hidden_effect = {
				give_resource_rights = { receiver = GRU state = 234 }
				give_resource_rights = { receiver = GRU state = 235 }
	}
	}
}

country_event = { # VKB claims
	id = rotermorgenmisc.400
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.400" }
	title = rotermorgenmisc.400.t
	desc = rotermorgenmisc.400.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
				1091 = {
					add_claim_by = VKB
				}
				190 = {
					add_claim_by = VKB
				}
				189 = {
					add_claim_by = VKB
				}	
				11 = {
					add_claim_by = VKB
				}
				96 = {
					add_claim_by = VKB
				}
				12 = {
					add_claim_by = VKB
				}
				191 = {
					add_claim_by = VKB
				}
				13 = {
					add_claim_by = VKB
				}
				880 = {
					add_claim_by = VKB
				}
				755 = {
					add_claim_by = VKB
				}
				210 = {
					add_claim_by = VKB
				}
				209 = {
					add_claim_by = VKB
				}
				208 = {
					add_claim_by = VKB
				}
				263 = {
					add_claim_by = VKB
				}
				244 = {
					add_claim_by = VKB
				}
				195 = {
					add_claim_by = VKB
				}
				246 = {
					add_claim_by = VKB
				}
				94 = {
					add_claim_by = VKB
				}
				204 = {
					add_claim_by = VKB
				}
				207 = {
					add_claim_by = VKB
				}
				206 = {
					add_claim_by = VKB
				}		
				1087 = {
					add_claim_by = VKB
				}
				243 = {
					add_claim_by = VKB
				}
				242 = {
					add_claim_by = VKB
				}
				205 = {
					add_claim_by = VKB
				}
	}
}

country_event = { # VKM claims
	id = rotermorgenmisc.500
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.500" }
	title = rotermorgenmisc.500.t
	desc = rotermorgenmisc.500.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
				219 = {
					add_claim_by = VKM
				}
				247 = {
					add_claim_by = VKM
				}
				264 = {
					add_claim_by = VKM
				}	
				248 = {
					add_claim_by = VKM
				}
				351 = {
					add_claim_by = VKM
				}
				253 = {
					add_claim_by = VKM
				}
				254 = {
					add_claim_by = VKM
				}
				252 = {
					add_claim_by = VKM
				}
				257 = {
					add_claim_by = VKM
				}
				255 = {
					add_claim_by = VKM
				}
				239 = {
					add_claim_by = VKM
				}
				401 = {
					add_claim_by = VKM
				}
				250 = {
					add_claim_by = VKM
				}
				251 = {
					add_claim_by = VKM
				}
				256 = {
					add_claim_by = VKM
				}
				249 = {
					add_claim_by = VKM
				}
				400 = {
					add_claim_by = VKM
				}
				399 = {
					add_claim_by = VKM
				}
				214 = {
					add_claim_by = VKM
				}
				397 = {
					add_claim_by = VKM
				}
				262 = {
					add_claim_by = VKM
				}
				398 = {
					add_claim_by = VKM
				}
				651 = {
					add_claim_by = VKM
				}
				652 = {
					add_claim_by = VKM
				}
				406 = {
					add_claim_by = VKM
				}
				
				1205 = {
					add_claim_by = VKM
				}
				1204 = {
					add_claim_by = VKM
				}
				1203 = {
					add_claim_by = VKM
				}
				
				
				1198 = {
					add_claim_by = VKM
				}
				1193 = {
					add_claim_by = VKM
				}
				1199 = {
					add_claim_by = VKM
				}
				1197 = {
					add_claim_by = VKM
				}
				
				406 = {
					add_claim_by = VKM
				}
				1194 = {
					add_claim_by = VKM
				}

					1208 = {
					add_claim_by = VKM
				}
	}
}

country_event = { # HYP claims
	id = rotermorgenmisc.900
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.900" }
	title = rotermorgenmisc.900.t
	desc = rotermorgenmisc.900.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
				141 = {
					add_claim_by = HYP
				}
				139 = {
					add_claim_by = HYP
				}
				138 = {
					add_claim_by = HYP
				}	
				124 = {
					add_claim_by = HYP
				}
				140 = {
					add_claim_by = HYP
				}
				908 = {
					add_claim_by = HYP
				}
				38 = {
					add_claim_by = HYP
				}
				778 = {
					add_claim_by = HYP
				}
				666 = {
					add_claim_by = HYP
				}
				960 = {
					add_claim_by = HYP
				}
				909 = {
					add_claim_by = HYP
				}
				145 = {
					add_claim_by = HYP
				}
				110 = {
					add_claim_by = HYP
				}
				142 = {
					add_claim_by = HYP
				}
				143 = {
					add_claim_by = HYP
				}
				144 = {
					add_claim_by = HYP
				}
				937 = {
					add_claim_by = HYP
				}
				936 = {
					add_claim_by = HYP
				}
				844 = {
					add_claim_by = HYP
				}
				148 = {
					add_claim_by = HYP
				}
				213 = {
					add_claim_by = HYP
				}
				147 = {
					add_claim_by = HYP
				}
				
				722 = {
					add_claim_by = HYP
				}
				215 = {
					add_claim_by = HYP
				}
				149 = {
					add_claim_by = HYP
				}
				150 = {
					add_claim_by = HYP
				}
				111 = {
					add_claim_by = HYP
				}
				864 = {
					add_claim_by = HYP
				}
				863 = {
					add_claim_by = HYP
				}
				840 = {
					add_claim_by = HYP
				}
				865 = {
					add_claim_by = HYP
				}
				146 = {
					add_claim_by = HYP
				}
				216 = {
					add_claim_by = HYP
				}
	}
}


country_event = { # VSJ claims
	id = rotermorgenmisc.950
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.950" }
	title = rotermorgenmisc.950.t
	desc = rotermorgenmisc.950.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
				653 = {
					add_claim_by = VSJ
				}	
				572 = {
					add_claim_by = VSJ
				}
				403 = {
					add_claim_by = VSJ
				}
				580 = {
					add_claim_by = VSJ
				}
				516 = {
					add_claim_by = VSJ
				}
				577 = {
					add_claim_by = VSJ
				}
				571 = {
					add_claim_by = VSJ
				}
				570 = {
					add_claim_by = VSJ
				}
				578 = {
					add_claim_by = VSJ
				}
				576 = {
					add_claim_by = VSJ
				}
				568 = {
					add_claim_by = VSJ
				}
				569 = {
					add_claim_by = VSJ
				}
				811 = {
					add_claim_by = VSJ
				}
				644 = {
					add_claim_by = VSJ
				}
				
				1200 = {
					add_claim_by = VSJ
				}
				1201 = {
					add_claim_by = VSJ
				}
				1202 = {
					add_claim_by = VSJ
				}
				573 = {
					add_claim_by = VSJ
				}
	}
}

country_event = { # VST claims
	id = rotermorgenmisc.951
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.951" }
	title = rotermorgenmisc.951.t
	desc = rotermorgenmisc.951.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
				402 = {
					add_claim_by = VST
				}	
				587 = {
					add_claim_by = VST
				}
				583 = {
					add_claim_by = VST
				}
				404 = {
					add_claim_by = VST
				}
				590 = {
					add_claim_by = VST
				}
				712 = {
					add_claim_by = VST
				}
				588 = {
					add_claim_by = VST
				}
				810 = {
					add_claim_by = VST
				}
				40 = {
					add_claim_by = VST
				}
				589 = {
					add_claim_by = VST
				}
				584 = {
					add_claim_by = VST
				}
				861 = {
					add_claim_by = VST
				}
				585 = {
					add_claim_by = VST
				}
				
				405 = {
					add_claim_by = VST
				}
				732 = {
					add_claim_by = VST
				}
				1042 = {
					add_claim_by = VST
				}
				407 = {
					add_claim_by = VST
				}
				586 = {
					add_claim_by = VST
				}
				
				418 = {
					add_claim_by = VST
				}
				804 = {
					add_claim_by = VST
				}
				267 = {
					add_claim_by = VST
				}
				654 = {
					add_claim_by = VST
				}
				618 = {
					add_claim_by = VST
				}
				617 = {
					add_claim_by = VST
				}
				1083 = {
					add_claim_by = VST
				}
				619 = {
					add_claim_by = VST
				}
				1085 = {
					add_claim_by = VST
				}
				287 = {
					add_claim_by = VST
				}
				897 = {
					add_claim_by = VST
				}
				416 = {
					add_claim_by = VST
				}
				415 = {
					add_claim_by = VST
				}
				442 = {
					add_claim_by = VST
				}
				441 = {
					add_claim_by = VST
				}
				445 = {
					add_claim_by = VST
				}
				891 = {
					add_claim_by = VST
				}
				582 = {
					add_claim_by = VST
				}
				1210  = {
					add_claim_by = VST
				}
				1211  = {
					add_claim_by = VST
				}
				1209  = {
					add_claim_by = VST
				}
					1212 = {
					add_claim_by = VST
				}
	}
}

country_event = { #rehab of generals
	id = rotermorgenmisc.150
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.150" }
	title = rotermorgenmisc.150.t
	desc = rotermorgenmisc.150.d
	is_triggered_only = yes
	
	option = { # 
		name = rotermorgenmisc.150.a
		create_field_marshal = {
			name = "Heinz Guderian"
			picture = "gfx/leaders/GRU/Portrait_Germany_Heinz_Guderian_kr.png"
			traits = { trickster brilliant_strategist panzer_leader armor_officer career_officer }
			skill = 4
			attack_skill = 3
			defense_skill = 3
			planning_skill = 4
			logistics_skill = 3
		}
		create_corps_commander = {
			name = "Walter Model"
			picture = "gfx/leaders/GRU/Portrait_Germany_Walter_Model_kr.png"
			traits = { politically_connected trait_cautious harsh_leader brilliant_strategist trickster }
			skill = 4
			attack_skill = 3
			defense_skill = 5
			planning_skill = 2
			logistics_skill = 3
		}
		create_corps_commander = {
			name = "Werner von Blomberg"
			picture = "gfx/leaders/GRU/Portrait_Germany_Werner_von_Blomberg.png"
			traits = { trickster armor_officer career_officer }
			skill = 3
			attack_skill = 3
			defense_skill = 2
			planning_skill = 3
			logistics_skill = 2
		}

		create_corps_commander = {
			name = "G√ºnther von Kluge"
			picture = "gfx/leaders/GRU/Portrait_Germany_Gunther_Kluge_kr.png"
			traits = { career_officer armor_officer }
			skill = 4
			attack_skill = 3
			defense_skill = 3
			planning_skill = 4
			logistics_skill = 3
		}

		create_corps_commander = {
			name = "Erwin von Witzleben"
			picture = "gfx/leaders/GRU/Portrait_Germany_Erwin_von_Witzleben_kr.png"
			traits = { skilled_staffer career_officer }
			skill = 3
			attack_skill = 2
			defense_skill = 3
			planning_skill = 2
			logistics_skill = 3
		}
		create_corps_commander = {
			name = "Wilhelm Ritter von Leeb"
			picture = "gfx/leaders/GRU/Portrait_Germany_Wilhelm_Ritter_von_Leeb_kr.png"
			traits = { skilled_staffer infantry_officer }
			skill = 3
			attack_skill = 2
			defense_skill = 3
			planning_skill = 3
			logistics_skill = 2
		
		}
		create_corps_commander = {
	name = "Ewald von Kleist"
	picture = "gfx/leaders/GRU/Portrait_Germany_Ewald_Kleist_kr.png"
	traits = { skilled_staffer }
	skill = 3
	attack_skill = 3
	defense_skill = 2
	planning_skill = 3
	logistics_skill = 2
}

create_corps_commander = {
	name = "Fedor von Bock"
	picture = "gfx/leaders/GRU/Portrait_Germany_Fedor_Bock_kr.png"
	traits = { brilliant_strategist harsh_leader trait_cautious }
	skill = 3
	attack_skill = 4
	defense_skill = 2
	planning_skill = 2
	logistics_skill = 2
}

create_field_marshal = {
	name = "Friedrich Paulus"
	picture = "gfx/leaders/GRU/Portrait_Germany_Friedrich_Paulus_kr.png"
	traits = { infantry_officer }
	skill = 3
	attack_skill = 2
	defense_skill = 2
	planning_skill = 3
	logistics_skill = 3
}
create_corps_commander = {
	name = "Georg von K√ºchler"
	picture = "gfx/leaders/GRU/Portrait_Germany_Georg_Kuchler_kr.png"
	traits = { politically_connected career_officer }
	skill = 3
	attack_skill = 3
	defense_skill = 3
	planning_skill = 2
	logistics_skill = 2
}

create_corps_commander = {
	name = "Franz Halder"
	picture = "gfx/leaders/GRU/Portrait_Germany_Franz_Halder_kr.png"
	traits = { organizer }
	skill = 3
	attack_skill = 2
	defense_skill = 2
	planning_skill = 4
	logistics_skill = 2
}

create_corps_commander = {
	name = "Gotthard Heinrici"
	picture = "gfx/leaders/GRU/Portrait_Germany_Gotthard_Heinrici_kr.png"
	traits = { trait_engineer fortress_buster }
	skill = 3
	attack_skill = 4
	defense_skill = 2
	planning_skill = 2
	logistics_skill = 2
}
create_corps_commander = {
	name = "Erich von Manstein"
	picture = "gfx/leaders/GRU/Portrait_Germany_Erich_von_Manstein_kr.png"
	traits = { trickster armor_officer brilliant_strategist trait_engineer }
	skill = 4
	attack_skill = 3
	defense_skill = 3
	planning_skill = 3
	logistics_skill = 4
}
create_field_marshal = {
	name = "Gerd von Rundstedt"
	picture = "gfx/leaders/GRU/Portrait_Germany_Gerd_von_Rundstedt_kr.png"
	traits = { defensive_doctrine offensive_doctrine }
	skill = 4
	attack_skill = 2
	defense_skill = 3
	planning_skill = 4
	logistics_skill = 4
}

create_navy_leader = {
	name = "Ludwig von Reuter"
	picture = "gfx/leaders/GRU/Portrait_Germany_Ludwig_Reuter_kr.png"
	traits = { ironside superior_tactician old_guard_navy }
	skill = 5
	id = 984
	attack_skill = 5
	defense_skill = 4
	maneuvering_skill = 4
	coordination_skill = 5
}

create_navy_leader = {
	name = "Wilhelm Souchon"
	picture = "gfx/leaders/GRU/Portrait_Germany_Wilhelm_Souchon_kr.png"
	traits = { spotter old_guard_navy }
	skill = 3
	attack_skill = 3
	defense_skill = 2
	maneuvering_skill = 3
	coordination_skill = 3
}

create_navy_leader = {
	name = "Max Valentiner"
	picture = "gfx/leaders/GRU/Portrait_Germany_Max_Valentiner_kr.png"
	traits = { seawolf }
	skill = 4
	attack_skill = 4
	defense_skill = 1
	maneuvering_skill = 4
	coordination_skill = 3
}

create_navy_leader = {
	name = "Rolf Carls"
	picture = "gfx/leaders/GRU/Portrait_Germany_Rolf_Carls_kr.png"
	traits = { blockade_runner old_guard_navy }
	skill = 4
	attack_skill = 3
	defense_skill = 4
	maneuvering_skill = 4
	coordination_skill = 3
}

create_navy_leader = {
	name = "G√ºnther L√ºtjens"
	picture = "gfx/leaders/GRU/Portrait_Germany_Gunther_Lutjens_kr.png"
	traits = { }
	skill = 3
	attack_skill = 3
	defense_skill = 1
	maneuvering_skill = 2
	coordination_skill = 3
}

create_navy_leader = {
	name = "Bernhard Rogge"
	picture = "gfx/leaders/GRU/Portrait_Germany_Bernhard_Rogge_kr.png"
	traits = { seawolf }
	skill = 1
	attack_skill = 2
	defense_skill = 1
	maneuvering_skill = 2
	coordination_skill = 1
}

	}
}

country_event = { # Paetal the traitor
	id = rotermorgenmisc.777
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.777" }
	title = rotermorgenmisc.777.t
	desc = rotermorgenmisc.777.d
	picture = GFX_report_event_traitor
	is_triggered_only = yes
	
	option = { # death
		name = rotermorgenmisc.777.a
		add_manpower = -1
		set_country_flag = mememan_dead
		GRU = {
			hidden_effect = {
				country_event = {
				id = rotermorgenmisc.778
				days =0
				}
			}
		}
	}
}

country_event = { # roehm the hero
	id = rotermorgenmisc.778
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.778" }
	title = rotermorgenmisc.778.t
	desc = rotermorgenmisc.778.d
	picture = GFX_report_event_hero
	is_triggered_only = yes
	
	option = { # death
		name = rotermorgenmisc.778.a
		remove_ideas = {
			GRU_MEMEMAN_sec_tot
		}
		if = {
			limit = {
				GRU = { has_country_flag = NMDVP_R_RULE }
			}
			add_ideas = {
				GRU_Ernst_Roehm_sec_npo
			}
		}
		else = {
			add_ideas = {
				GRU_Ernst_Roehm_sec_tot
			}
		}
	}
}

country_event = { # oskar the degenerate
	id = rotermorgenmisc.666
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.666" }
	title = rotermorgenmisc.666.t
	desc = rotermorgenmisc.666.d
	picture = GFX_report_event_degenerate
	is_triggered_only = yes
	
	option = { # death
		name = rotermorgenmisc.666.a
		add_manpower = -1
	}
	option = { # death
		name = rotermorgenmisc.666.b
		add_manpower = -1
	}
	option = { # death
		name = rotermorgenmisc.666.c
		add_manpower = -1
	}
}

country_event = { # oskar the degenerate
	id = rotermorgenmisc.667
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.667" }
	title = rotermorgenmisc.667.t
	desc = rotermorgenmisc.667.d
	picture = GFX_report_event_degenerate
	is_triggered_only = yes
	
	option = { # tribunal
		name = rotermorgenmisc.667.a
		hidden_effect = {
				country_event = {
				id = rotermorgenmisc.668
				days =0
				}
			}
	}
}


country_event = { # oskar the degenerate
	id = rotermorgenmisc.668
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.668" }
	title = rotermorgenmisc.668.t
	desc = rotermorgenmisc.668.d
	picture = GFX_report_event_degenerate_two
	is_triggered_only = yes
	
	option = { # death
		name = rotermorgenmisc.668.a
		add_manpower = -1
	}
	option = { # death
		name = rotermorgenmisc.668.b
		add_manpower = -1
	}
	option = { # death
		name = rotermorgenmisc.668.c
		add_manpower = -1
	}
	option = { # death
		name = rotermorgenmisc.668.e
		add_manpower = -1
	}
}


country_event = { # allignment to internationale SMEPD
	id = rotermorgenmisc.800
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.800" }
	title = rotermorgenmisc.800.t
	desc = rotermorgenmisc.800.d
	is_triggered_only = yes
	
	option = { # join internationale
		name = rotermorgenmisc.800.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_opinion = {
					target = GRU
					value < 0
				}
			}
			modifier = {
				factor = 100
				has_opinion = {
					target = GRU
					value > 60
				}
			}
		}
		INT = {
		add_to_faction = ROOT
		}
	}
	option = { # we good
		name = rotermorgenmisc.800.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 100
				has_opinion = {
					target = GRU
					value < 0
				}
			}
			modifier = {
				factor = 0
				has_opinion = {
					target = GRU
					value > 60
				}
			}
		}
	}
}

country_event = { # allignment to internationale SMEPD
	id = rotermorgenmisc.801
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.801" }
	title = rotermorgenmisc.801.t
	desc = rotermorgenmisc.801.d
	is_triggered_only = yes
	
	option = { # join internationale
		name = rotermorgenmisc.801.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_opinion = {
					target = GRU
					value < 0
				}
			}
			modifier = {
				factor = 100
				has_opinion = {
					target = GRU
					value > 60
				}
			}
		}
		GRU = {
		add_to_faction = ROOT
		}
	}
	option = { # we good
		name = rotermorgenmisc.801.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 100
				has_opinion = {
					target = GRU
					value < 0
				}
			}
			modifier = {
				factor = 0
				has_opinion = {
					target = GRU
					value > 60
				}
			}
		}
	}
}

country_event = { 
	id = rotermorgenmisc.810
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.810" }
	title = rotermorgenmisc.810.t
	desc = rotermorgenmisc.810.d
	is_triggered_only = yes
	
	option = { # 
		name = rotermorgenmisc.810.a
		add_stability = -0.10
	}
}

country_event = { # anarcho_communes
	id = rotermorgenmisc.850
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.850" }
	title = rotermorgenmisc.850.t
	desc = rotermorgenmisc.850.d
	#is_triggered_only = yes
	hidden = yes
	trigger = {
		is_subject_of = GRU
		NOT = { has_country_flag = GRU_ANARCHIST_WORLD_COUNTRY }
		GRU = { has_country_flag = GRU_ANARCHIST_WORLD }
	}
	immediate = {
		ROOT = {
				create_country_leader = {
							name = "Communal Councils"
							desc = "GRU_Councils_DESC"
							picture = "gfx/leaders/GRU/councilism.png"
							expire = "1965.1.1"
							ideology = anarcho_syndicalist_subtype
				}
				set_cosmetic_tag = GRU_ANARCHISM_PUPPET
				set_party_name = {
						ideology = syndicalist
						long_name = ANARCHIST_GERMANS_long
						name = ANARCHIST_GERMANS
				}
				add_ideas = FAUD_SOCIETY_THREE
				load_focus_tree = {
					tree = generic_focus		
				}
				set_country_flag = GRU_ANARCHIST_WORLD_COUNTRY
		}
		GRU = {
			puppet = ROOT
			set_autonomy = {
				target = ROOT
				autonomy_state = RM_ANARCHOCOMMUNE
			}
		}
	}
}



country_event = { # Future of Germany MarLibs
	id = rotermorgenmisc.860
	immediate = { log = "[GetDateText]: [Root.GetName]: event rotermorgenmisc.860" }
	title = rotermorgenmisc.860.t
	desc = rotermorgenmisc.860.d
	is_triggered_only = yes
	
	option = { # 
		name = rotermorgenmisc.860.a
			swap_ideas = {
							remove_idea = GRU_SUCCDUM
							add_idea = GRU_MARLIB_STATE
						}
	}
	
	option = { # 
		name = rotermorgenmisc.860.b
			set_cosmetic_tag = GRU_REP_KRUPP
			swap_ideas = {
							remove_idea = GRU_SUCCDUM
							add_idea = GRU_OLIGARCHY
						}
			hidden_effect = {
			set_party_name = {
						ideology = authoritarian_democrat
						long_name = GRU_MARLIB_PARTY_long
						name = GRU_MARLIB_PARTY
				}
			create_country_leader = {
							name = "Gustav Krupp"
							desc = "GRU_Krupp_DESC"
							picture = "gfx/leaders/GRU/Portrait_GRU_Gustav_Krupp.png"
							expire = "1965.1.1"
							ideology = oligarchy_subtype
				}
			add_popularity = {
							ideology = authoritarian_democrat
							popularity = 0.35
						}
			set_politics = {
					ruling_party = authoritarian_democrat
					last_election = "1936.11.16"
					elections_allowed = no
				}
			remove_all_ministers = yes
				add_ideas = {
					GRU_Alfried_Krupp_hog_sco
					GRU_Ludwig_Kaas_for_ade
					MAF_Fritz_Thyssen_eco_pau
					GRU_Otto_Bradfisch_sec_ade
				}
			}
	}
	
	option = { # 
		name = rotermorgenmisc.860.c
			set_cosmetic_tag = GRU_CORPORATE_DICTATORSHIP
			remove_ideas = GRU_SPD_FAUD_FREIHEIT
			swap_ideas = {
							remove_idea = GRU_SUCCDUM
							add_idea = GRU_CORPORATE_DICTATORSHIP_IDEA
						}
			hidden_effect = {
			set_country_flag = GRU_CORPORATE_DICTATORSHIP_FLAG
			set_party_name = {
						ideology = paternal_autocrat
						long_name = GRU_INDUSTRIALS_long
						name = GRU_INDUSTRIALS
				}
			create_country_leader = {
							name = "Gustav Krupp"
							desc = "GRU_Krupp_DESC"
							picture = "gfx/leaders/GRU/Portrait_GRU_Gustav_Krupp.png"
							expire = "1965.1.1"
							ideology = corporatocracy_subtype
				}
			set_party_name = {
						ideology = authoritarian_democrat
						long_name = GRU_INDUSTRIALS_long
						name = GRU_INDUSTRIALS
				}
			create_country_leader = {
							name = "Gustav Krupp"
							desc = "GRU_Krupp_DESC"
							picture = "gfx/leaders/GRU/Portrait_GRU_Gustav_Krupp.png"
							expire = "1965.1.1"
							ideology = oligarchy_subtype
				}
			set_party_name = {
						ideology = market_liberal
						long_name = GRU_INDUSTRIALS_long
						name = GRU_INDUSTRIALS
				}
			add_popularity = {
							ideology = paternal_autocrat
							popularity = 0.35
						}
			set_politics = {
					ruling_party = paternal_autocrat
					last_election = "1936.11.16"
					elections_allowed = no
				}
			complete_national_focus = GRU_CORPORATE_DICTATORSHIP
			remove_all_ministers = yes
				add_ideas = {
					GRU_Alfried_Krupp_hog_sco
					GRU_Ludwig_Kaas_for_ade
					MAF_Fritz_Thyssen_eco_pau
					GRU_Otto_Bradfisch_sec_ade
				}
			}
	}
}